[[{"l":"Basic Concepts"},{"l":"Pagination is a simple task","p":["A classic pagination gem needs to calculate a series of 10-20 sequential integers (the page numbers) and loop through that series to produce one link per integer. That's just a long string with a few numbers in it, and it's a very simple task... unless someone builds a whole complex world of thousands of objects around a simple series of integers :)."]},{"l":"Pagy keeps it simple","p":["Pagy keeps pagination as straightforward as it could be: there are no \"declarative DSL\" to learn, no \"global pollution\" to avoid, no need for any special module or adapter. There are no nested modules, classes nor countless methods and many hundreds lines of code... all really difficult to justify for such a simple task.","Pagy is simple. Just take a look at the core source: pagy.rb, pagy/backend.rb, pagy/frontend.rb.","Its size and simplicity is one of the reasons of its stunning performance."]},{"l":"Specialized code instead of generic helpers","p":["Pagy is very specialized. It uses its own code to produce its own HTML, URLs, pluralization and interpolation. Unlike other gems it does not use any generic helpers such as rails helpers ( tag, link_to, url_for, I18n.t, ...).","Those are perfect helpers but only if used in an application. Because they are generic they can get the job done in any situation, but exactly because they are generic, they are just the wrong tool to use in a pagination gem. Indeed they are inevitably A LOT slower and use A LOT more memory than specialized methods (or no method at all, like in case of HTML string interpolation extensively used by Pagy)."]},{"l":"Stay away from the models","p":["Paginating is not business logic: it has nothing to do with the data itself. It has to do with the way you decide to present the data... one page at the time, n items per page... That is indeed presentation logic, so the models are really not the place where to add that logic!","Every collection knows already how to paginate itself: that's what OFFSET and LIMIT in DBs are for! You decide the limit (the items per page) and Pagy (or yourself) can calculate the offset with simple arithmetic: offset = items * (page - 1). That's not rocket science! You don't need to add a bunch of methods to your models just to get the page records!","Ignoring these simple rules has a lot of drawbacks for performance, memory, maintenance, complexity and usability, as you can confirm with the Gems Comparison page."]},{"l":"No rails engine needed","p":["You don't need a rails engine for a simple task like pagination: you just need a few lines of plain ruby to get it right, fast and light in any framework, not just rails."]},{"l":"Really agnostic pagination","p":["Pagy provides the clean logic of pagination in one micro-class that creates a micro-object of less than 3k: it works perfectly, knowing absolutely nothing about your environment. (see the source)","You could even use it directly (without using any other Pagy code) in a small partial template that you could write in just 5 minutes and about 15 lines. There you could use the regular helpers provided by your framework and it would still work a few times faster than using other gems, even without using any Pagy template nor any other Pagy method."]},{"l":"Really easy to customize","p":["If options and configuration are not enough, you have a several specialized extras, and if all that is still not enough, any other special customization is at most one step far from your own code. You include them in your code, so you can override any method right where you use it: no tricky gimmickry required.","What could be easier?"]}],[{"l":"Quick Start","p":["Ensure to have rack installed (or gem install rack)","Download and run the following file","Use it fully without any app"]},{"l":"Install","p":["If you use Bundler, add the gem in the Gemfile, optionally avoiding the next major version with breaking changes (see RubyGem Specifiers):","If you don't use Bundler, install and require the Pagy gem:"]},{"l":"Configure","p":["Download the configuration file linked below and save it into the config/initializers dir","Quick Start","Download the configuration file linked below and require it when your app starts","Uncomment/edit the pagy.rb file in order to explicitly require the extras you need and eventually customize the static Pagy::DEFAULT variables in the same file.","You can further customize the variables per instance, by explicitly passing any variable to the Pagy*.new constructor or to any pagy* controller method."]},{"l":"Backend Setup"},{"l":"Render the pagination","p":["Your pagination is rendered on the server","Include the frontend","Use a fast helper","Or use a template","Helpers and templates are available for different frameworks and different flavors (static, responsive, compact, etc.) bootstrap, bulma, foundation, materialize, semantic, uikit i","Your pagination is rendered by Vue.js, react.js, ...","Require the metadata extra","Add the metadata to your JSON response","Your API is consumed by some client","Require the headers extra","Add the pagination headers to your responses","Render your JSON response as usual"]}],[{"l":"Requirements","p":["Pagy 4.0+ runs on ruby 2.5+","Older versions run on ruby 1.9+ or jruby 1.7+ till ruby 2.5"]},{"l":"Working environments","p":["Your app uses a Rack based framework (Rails, Sinatra, Padrino, etc.)","Your app does not use a Rack based framework.","Require the standalone extra, and pass a :url variable.","With or without any app nor configuration","Use the Pagy::Console."]},{"l":"Special cases","p":["If the collection to paginate is not a collection supported out of the box like ActiveRecord scope, array, elasticsearch_rails, searchkick, meilisearch, ... you may need to override the pagy_*get_vars backend method.","If the collection you are paginating doesn't respond to offset and limit and is not yet supported by any extra, you may need to override the pagy_get_items method in your controller (to get the items out of your specific collection)","If your framework doesn't have a params method you can use the standalone extra or you may need to define the params method or override the pagy_get_vars(which uses the params method) in your controller","If your framework doesn't have a request method you can use the standalone extra or you may need to override the pagy_url_for(which uses Rack and request) in your view","The total overriding you may need is usually just a handful of lines at worse, and it doesn't need monkey patching or writing any sub-class or module"]}],[{"i":"migrate-willpaginatekaminari","l":"Migrate WillPaginate/Kaminari","p":["This page tries to cover most of the standard changes you will need to make in order to to migrate from a legacy pagination, however, if the legacy pagination is highly customized you may need more digging into the Pagy documentation.","Feel free to ask on Gitter if you need more assistance."]},{"l":"Steps","p":["The Pagy API is quite different from other pagination gems, so there is not always a one-to-one correlation between the changes you will have to make, however, if you split the process in the following general steps it should be quite simple.","Removing the legacy code, trying to convert the statements that have a direct relation with Pagy","Running the app so to raise exceptions in order to find legacy code that may still be in place","When the app runs without errors, adjusting the pagination to look and work as before: just many times faster and using many times less memory ;)"]},{"l":"Removing the old code","p":["In this step you will search statements from legacy pagination gems, remove them and possibly write the equivalent Pagy statements if that makes sense for Pagy:","If it makes sense, you should add the equivalent Pagy statement and remove the legacy statement(s).","If it doesn't make sense, then just remove the legacy statement.","Notice: Don't worry about missing something in this step: if anything wont work as before you can fix it later in the process."]},{"l":"Preparation","p":["Copy the pagy.rb initializer: you will edit it during the process.","Replace the legacy gem with gem pagy in the Gemfile and bundle, or install and require the gem if you don't use bundler.","Ensure that the legacy gem will not get loaded anymore (or it could mask some old statement still in place and not converted)","Add the include Pagy::Backend statement to the application controller.","Add the include Pagy::Frontend statement to the application helper.","Keep handy the legacy gem doc and the Pagy API doc in parallel."]},{"l":"Application-wide search and replace","p":["Search for the class name of the pagination gem to migrate from, for example WillPaginate or Kaminari. You should find most of the code relative to global gem configuration, or monkey patching.","For example, the following configuration are equivalent:","Remove all the legacy settings of the old gem(s) and uncomment and edit the new settings in the pagy.rb initializer _(see How to configure pagy."]},{"l":"Cleanup the Models","p":["One of the most noticeable difference between the legacy gems and Pagy is that Pagy doesn't mess at all with the models (read the reasons here).","The other gems are careless about adding methods, scopes, and even configuration settings to them, so you will find different kinds of statements scattered around in your models. You should remove them all and eventually add the equivalent code where it makes sense to Pagy, which of course is absolutely not in the models.","For example, you may want to search for keywords like per_page, per and such, which are actually configuration settings. They should either go into the pagy.rb initializer if they are global to the app, or into the specific pagy call in the controller if they are specific to an action.","If the app used the page scope in some of its methods or scopes in some model, that should be removed (including removing the argument used to pass the page number to the method/scope), leaving the rest of the scope in place. Search where the app uses the already paginated scope in the controllers, and use the scope in a regular pagy statement. For example:"]},{"l":"Search and replace in the Controllers","p":["In the controllers, the occurrence of statements from legacy pagination should have a one-to-one relationship with the Pagy pagination, so you should be able to go through each of them and convert them quite easily.","Search for keywords like page and paginate statements and use the pagy method instead. For example:"]},{"l":"Search and replace in the Views","p":["Also in the views, the occurrence of statements from legacy pagination should have a one-to-one relationship with the Pagy pagination, so you should be able to go through each of them and convert them quite easily.","Search for keywords like will_paginate and paginate statement and use one of the pagy_nav methods. For example:"]},{"l":"Find the remaining code","p":["If the app has tests it's time to run them. If not, start the app and navigate through its pages.","If anything of the old code is still in place you should get some exception. In that case, just remove the old code and retry until there will be no exception."]},{"l":"Fine tuning","p":["If the app is working and displays the pagination, it's time to adjust Pagy as you need, but if the old pagination was using custom items (e.g. custom params, urls, links, html elements, etc.) it will likely not work without some possibly easy adjustment.","Please take a look at the topics in the how-to documentation: that should cover most of your custom needs."]},{"l":"CSSs","p":["The css styling that you may have applied to the pagination elements may need some minor change. However if the app uses the pagination from bootstrap (or some other framework), the same CSSs should work seamlessly with the pagy nav helpers or with any of the bootstrap templates."]},{"l":"I18n","p":["If the app uses I18n you should follow the I18n doc."]}],[{"l":"How To","p":["This page contains the practical tips and examples to get the job done with Pagy. If there is something missing, or some topic that you think should be added, fixed or explained better, please open an issue."]},{"l":"Control the items per page","p":["You can control the items per page with the items variable. (Default 20)","You can set its default in the pagy.rb initializer (see How to configure pagy). For example:","You can also pass it as an instance variable to the Pagy.new method or to the pagy controller method:","See also a couple of extras that handle the :items in some special way:","gearbox: Automatically change the number of items per page depending on the page number","items: Allow the client to request a custom number of items per page with an optional selector UI"]},{"l":"Control the page links","p":["You can control the number and position of the page links in the navigation through the :size variable. It is an array of 4 integers that specify which and how many page links to show.","The default is [1,4,4,1], which means that you will get 1 initial page, 4 pages before the current page, 4 pages after the current page, and 1 final page.","As usual you can set the :size variable as a global default by using the Pagy::DEFAULT hash or pass it directly to the pagy method.","The navigation links will contain the number of pages set in the variables:","size[0]... size[1] current page size[2]... size[3]","For example:","As you can see by the result of the series method, you get 3 initial pages, 1 :gap(series interrupted), 4 pages before the current page, the current :page(which is a string), 4 pages after the current page, another :gap and 3 final pages.","You can easily try different options (also asymmetrical) in a console by changing the :size. Just check the series array to see what it contains when used in combination with different core variables."]},{"l":"Skip the page links","p":["If you want to skip the generation of the page links, just set the :size variable to an empty array:","For example:"]},{"l":"Customize the series","p":["If changing the :size is not enough for your requirements (e.g. if you need to add intermediate segments or midpoints in place of gaps) you should override the series method. See more details and examples here."]},{"l":"Pass the page number","p":["You don't need to explicitly pass the page number to the pagy method, because it is pulled in by the pagy_get_vars(which is called internally by the pagy method). However you can force a page number by just passing it to the pagy method. For example:","That will explicitly set the :page variable, overriding the default behavior (which usually pulls the page number from the params[:page])."]},{"l":"Customize the page param","p":["Pagy uses the :page_param variable to determine the param it should get the page number from and create the URL for. Its default is set as Pagy::DEFAULT[:page_param] = :page, hence it will get the page number from the params[:page] and will create page URLs like ./?page=3 by default.","You may want to customize that, for example to make it more readable in your language, or because you need to paginate different collections in the same action. Depending on the scope of the customization, you have a couple of options:","Pagy::DEFAULT[:page_param] = :custom_param will be used as the global default","pagy(scope, page_param: :custom_param) or Pagy.new(count:100, page_param: :custom_param) will be used for a single instance (overriding the global default)","You can also override the pagy_get_vars if you need some special way to get the page number."]},{"l":"Customize the link attributes","p":["If you need to customize some HTML attribute of the page links, you may not need to override the pagy_nav* helper. It might be enough to pass some extra attribute string with the :link_extra variable. For example:","IMPORTANT: For performance reasons, the :link_extra variable must be a string formatted as a valid HTML attribute/value pairs. That string will get inserted verbatim in the HTML of the link. (see more advanced details in the pagy_link_proc documentation)"]},{"l":"Customize the request path","p":["Let's say you are using something like a Turbo frame and you are loading a collection with pagination on a page where you want the pagination links to point to a different path. For example, if you are on a page like /dashboard and you have a collection of foos in a Turbo frame. By default Pagy will use request.path when constructing pagination links, which will results in links like /dashboard?page=2.","If you'd like to override the path so that the links point to a different endpoint than the current page's request.path, you can pass in the request_path variable:","This will result in pagination links like /foos?page=2 instead of /dashboard?page=2."]},{"l":"Customize the params","p":["When you need to add some custom param or alter the params embedded in the URLs of the page links, you can set the variable :params to a Hash of params to add to the URL, or a Proc that can edit/add/delete the request params.","If it is a Proc it will receive the key-stringified params hash complete with the page param and it should return a possibly modified version of it.","An example using except and merge!:","You can also use the :fragment variable to add a fragment the URLs of the pages. For example:","IMPORTANT: For performance reasons the :fragment string must include the #."]},{"l":"Customize the URL","p":["When you need something more radical with the URL than just massaging the params, you should override the pagy_url_for right in your helper.","Notice: if you are also using the trim extra you should also override the pagy_trim method or the Pagy.trim javascript function.","The following are a couple of examples."]},{"l":"Enable fancy-routes","p":["The following is a Rails-specific alternative that supports fancy-routes (e.g. get 'your_route(/:page)' ... that produce paths like your_route/23 instead of your_route?page=23):","Notice that this overridden method is quite slower than the original because it passes through the rails helpers. However that gets mitigated by the internal usage of pagy_link_proc which calls the method only once even in the presence of many pages."]},{"l":"POST with page links","p":["You may need to POST a very complex search form that would generate an URL potentially too long to be handled by a browser, and your page links may need to use POST and not GET. In that case you can try this simple solution:","That would produce links that look like e.g. a href=22/a. Then you can attach a javascript \"click\" event on the page links. When triggered, the href content (i.e. the page number) should get copied to a hidden page input and the form should be posted.","For a detailed tutorial about this topic see Handling Pagination When POSTing Complex Search Forms by Ben Koshy."]},{"l":"Customize the item name","p":["The pagy_info and the pagy_items_selector_js helpers use the \"item\"/\"items\" generic name in their output. You can change that by editing the values of the pagy.item_name i18n key in the dictionary files that your app is using.","Besides you can also (dynamically) set the :i18n_key variable to let Pagy know where to lookup the item name in some dictionary file (instead of looking it up in the default pagy.item_name key).","You have a few ways to do that:","you can override the pagy_get_vars method in your controller, adding the dynamically set :i18n_key. For example with ActiveRecord (mostly useful with the i18n extra or if you copy over the AR keys into the pagy dictionary):","you can set the :i18n_key variable, either globally using the Pagy::DEFAULT hash or per instance with the Pagy.new method or with the pagy controller method:","or passing it as an optional keyword argument to the helper:","you can override entirely the :item_name by passing an already pluralized string directly to the helper call:","Notice: The variables passed to a Pagy object have the precedence over the variables returned by the pagy_get_vars. The fastest way to set the i18n_key is passing a literal string to the pagy method, the most convenient way is using pagy_get_vars, the most flexible way is passing a pluralized string to the helper."]},{"l":"Customize CSS styles","p":["Pagy provides a few frontend extras for bootstrap, bulma, foundation, materialize, semantic, tailwind and uikit that come with a decent styling provided by their framework.","If you need to further customize the provided styles, you don't necessary need to override the helpers/templates. Here are a few alternatives:","define the CSS styles to apply to the pagy CSS classes","if sass/scss is available: extend the pagy CSS classes with some framework defined class, using the @extend sass/scss directive","use the jQuery addClass method","use a couple of lines of plain javascript"]},{"l":"Override pagy methods","p":["You include the pagy modules in your controllers and helpers, so if you want to override any of them, you can redefine them right in your code, where you included them.","You can read more details in the nice How to Override pagy methods only in specific circumstances mini-post by Ben Koshy.","Also, consider that you can use prepend if you need to do it globally:"]},{"l":"Paginate an Array","p":["Please, use the array extra."]},{"l":"Paginate ActiveRecord collections","p":["Pagy works out of the box with ActiveRecord collections. See also the arel extra for better performance of grouped ActiveRecord collections."]},{"l":"Paginate a decorated collection","p":["Do it in 2 steps: first get the page of records without decoration, and then apply the decoration to it. For example:"]},{"l":"Custom count for custom scopes","p":["Your scope might become complex and the default pagy collection.count(:all) may not get the actual count. In that case you can get the right count with some custom statement, and pass it to pagy:","Notice: pagy will efficiently skip its internal count query and will just use the passed :count variable"]},{"l":"Paginate a grouped collection","p":["For better performance of grouped ActiveRecord collection counts, you may want to take a look at the arel extra extra."]},{"l":"Paginate for API clients","p":["When your app is a service that doesn't need to serve any UI, but provides an API to some sort of client, you can serve the pagination metadata as HTTP headers added to your response.","In that case you don't need the Pagy::Frontend nor any frontend extra. You should only require the headers extra and use its helpers to add the headers to your responses."]},{"l":"Paginate for Javascript Frameworks","p":["If your app uses ruby as pure backend and some javascript frameworks as the frontend (e.g. Vue.js, react.js, ...), then you may want to generate the whole pagination UI directly in javascript (with your own code or using some available component).","In that case you don't need the Pagy::Frontend nor any frontend extra. You should only require the metadata extra and pass the pagination metadata in your JSON response."]},{"l":"Paginate Ransack results","p":["Ransack result returns an ActiveRecord collection, which can be paginated out of the box. For example:"]},{"l":"Paginate search framework results","p":["Pagy has a few of extras for gems returning search results:","elasticsearch_rails","searchkick","meilisearch"]},{"l":"Paginate by date instead of a fixed number of items","p":["Use the calendar extra that adds pagination filtering by calendar time unit (year, quarter, month, week, day)."]},{"l":"Wrap existing pagination with pagy_calendar","p":["You can easily wrap your existing pagination with the pagy_calendar method. Here are a few examples adding :year and :month to different existing statements.","Then follow the calendar extra documentation for more details."]},{"l":"Paginate pre-offset and pre-limited collections","p":["With the other pagination gems you cannot paginate a subset of a collection that you got using offset and limit. With Pagy it is as simple as just adding the :outset variable, set to the initial offset. For example:","Assuming the :items default of 20, you will get the pages with the right records you are expecting. The first page from record 101 to 120 of the main collection, and the last page from 401 to 415 of the main collection. Besides the from and to attribute readers will correctly return the numbers relative to the subset that you are paginating, i.e. from 1 to 20 for the first page and from 301 to 315 for the last page."]},{"l":"Paginate non-ActiveRecord collections","p":["The pagy_get_vars method works out of the box with ActiveRecord collections; for other collections (e.g. mongoid, etc.) you may need to override it in your controller, usually by simply removing the :all argument passed to count:"]},{"l":"Paginate collections with metadata","p":["When your collection is already paginated and contains counts and pagination metadata, you don't need any pagy* controller method. For example this is a Tmdb API search result object, but you can apply the same principe to any other type of collection metadata:","As you can see it contains the pagination metadata that you can use to setup the pagination with pagy:"]},{"l":"Paginate Any Collection","p":["Pagy doesn't need to know anything about the kind of collection you paginate. It can paginate any collection, because every collection knows its count and has a way to extract a chunk of items given an offset and a limit. It does not matter if it is an Array or an ActiveRecord scope or something else: the simple mechanism is the same:","Create a Pagy object using the count of the collection to paginate","Get the page of items from the collection using pagy.offset and pagy.items","Here is an example with an array. (Please, notice that this is only a convenient example, but you should use the array extra to paginate arrays).","This is basically what the pagy method included in your controller does for you in one go:","Then of course, regardless the kind of collection, you can render the navigation links in your view:","See the Pagy::Backend source and the Pagy::Backend API documentation for more details."]},{"i":"use-the-pagy_nav-helpers","l":"Use the pagy_nav* helpers","p":["bootstrap","bulma","Depending on the level of your overriding, you may want to read the Pagy::Frontend API documentation for complete control over your helpers.","Extra","foundation","Helpers","Helpers are the preferred choice (over templates) for their performance. If you need to override a pagy_nav* helper you can copy and paste it in your helper and edit it there. It is a simple concatenation of strings with a very simple logic.","materialize","navs","Notice: the extras add a few other helpers that you can use the same way, in order to get added features (e.g. bootstrap compatibility, responsiveness, compact layouts, etc.)","pagy_bootstrap_nav, pagy_bootstrap_nav_js, pagy_bootstrap_combo_nav_js","pagy_bulma_nav, pagy_bulma_nav_js, pagy_bulma_combo_nav_js","pagy_foundation_nav, pagy_foundation_nav_js, pagy_foundation_combo_nav_js","pagy_materialize_nav, pagy_materialize_nav_js, pagy_materialize_combo_nav_js","pagy_nav_js, pagy_combo_nav_js","pagy_semantic_nav, pagy_semantic_nav_js, pagy_semantic_combo_nav_js","pagy_uikit_nav, pagy_uikit_nav_js, pagy_uikit_combo_nav_js","semantic","These helpers take the Pagy object and return the HTML string with the pagination links, which are wrapped in a nav tag and are ready to use in your view. For example:","uikit"]},{"l":"Skip single page navs","p":["Unlike other gems, Pagy does not decide for you that the nav of a single page of results must not be rendered. You may want it rendered... or maybe you don't. If you don't... wrap it in a condition and use the pagy_nav* only if @pagy.pages 1 is true. For example:"]},{"i":"skip-page1-param","l":"Skip page=1 param","p":["By default Pagy generates all the page links including the page param. If you want to remove the page=1 param from the first page link, just require the trim extra."]},{"l":"Use Templates","p":["bootstrap","bootstrap_nav.html.erb","bootstrap_nav.html.haml","bootstrap_nav.html.slim","bulma","bulma_nav.html.erb","bulma_nav.html.haml","bulma_nav.html.slim","foundation","foundation_nav.html.erb","foundation_nav.html.haml","foundation_nav.html.slim","If you need to try/compare an unmodified built-in template, you can render it right from the Pagy gem with:","nav.html.erb","nav.html.haml","nav.html.slim","pagy","Pagy provides the replacement templates for the pagy_nav, pagy_bootstrap_nav, pagy_bulma_nav, pagy_foundation_nav, and the pagy_uikit_nav helpers (available with the relative extras) in 3 flavors: erb, haml and slim.","The pagy_nav* helpers are optimized for speed, and they are really fast. On the other hand editing a template might be easier when you have to customize the rendering, however every template system adds some inevitable overhead and it will be about 30-70% slower than using the related helper. That will still be dozens of times faster than the other gems, but... you should choose wisely.","They produce exactly the same output of the helpers, but since they are slower, using them wouldn't make any sense unless you need to change something. In that case customize a copy in your app, then use it as any other template: just remember to pass the :pagy local set to the @pagy object. Here are the links to the sources to copy:","uikit","uikit_nav.html.erb","uikit_nav.html.haml","uikit_nav.html.slim","You may want to read also the Pagy::Frontend API documentation for complete control over your templates."]},{"i":"deal-with-a-slow-collection-count","l":"Deal with a slow collection COUNT(*)","p":["Every pagination gem needs the collection count in order to calculate all the other variables involved in the pagination. If you use a storage system like any SQL DB, there is no way to paginate and provide a full nav system without executing an extra query to get the collection count. That is usually not a problem if your DB is well organized and maintained, but that may not be always the case.","Sometimes you may have to deal with some not very efficient legacy apps/DBs that you cannot totally control. In that case the extra count query may affect the performance of the app quite badly.","You have 2 possible solutions in order to improve the performance."]},{"l":"Cache the count","p":["Depending on the nature of the app, a possible cheap solution would be caching the count of the collection, and Pagy makes that really simple.","Pagy gets the collection count through its pagy_get_vars method, so you can override it in your controller. Here is an example using the rails cache:","That may work very well with static (or almost static) DBs, where there is not much writing and mostly reading. Less so with more DB writing, and probably not particularly useful with a DB in constant change."]},{"l":"Avoid the count","p":["When the count caching is not an option, you may want to use the countless extra, which totally avoid the need for a count query, still providing an acceptable subset of the full pagination features."]},{"l":"Use AJAX","p":["You can trigger ajax render in rails by customizing the link attributes.","See also Using AJAX."]},{"l":"Maximize Performance","p":["Here are some tips that will help choosing the best way to use Pagy, depending on your requirements and environment."]},{"l":"Consider the nav_js","p":["If you need the classic pagination bar with links and info, then you have a couple of choices, depending on your environment:","Add the oj gem to your gemfile and use any pagy*_nav_js helper (see Javascript). That uses client side rendering and it is faster and lighter than using any pagy*_nav helper (40x faster, 36x lighter and 1,410x more efficient than Kaminari). Notice: the oj gem is not a requirement but helps the performance when it is available."]},{"l":"Consider the combo navs","p":["If you don't have strict requirements but still need to give the user total feedback and control on the page to display, then consider the pagy*_combo_nav_js helpers. They are faster and lighter, and even more when the oj gem is available. That gives you the best performance with nav info and UI (48x faster, 48x lighter and 2,270x more efficient than Kaminari) also saving real estate."]},{"l":"Consider the countless extra","p":["If your requirements allow to use the countless extra (minimal or automatic UI) you can save one query per page, and drastically boost the efficiency eliminating the nav info and almost all the UI. Take a look at the examples in the support extra."]},{"l":"Ignore Brakeman UnescapedOutputs false positives warnings","p":["Pagy output html safe HTML, however, being an agnostic pagination gem it does not use the specific html_safe rails helper on its output. That is noted by the Brakeman gem, that will raise a warning.","You can avoid the warning adding it to the brakeman.ignore file. More details here and here."]},{"i":"handle-pagyoverflowerror-exceptions","l":"Handle Pagy::OverflowError exceptions","p":["Pass an overflowing :page number and Pagy will raise a Pagy::OverflowError exception.","This often happens because users/clients paginate over the end of the record set or records go deleted and a user went to a stale page.","You can handle the exception by using the overflow extra which provides easy and ready to use solutions for a few common cases, or you can rescue the exception manually and do whatever fits better.","Here are a few options for manually handling the error in apps:","Do nothing and let the page render a 500","Rescue and render a 404","Rescue and redirect to the last known page (Notice: the overflow extra provides the same behavior without redirecting)","WARNING: All Pagy exceptions are subclasses of ArgumentError, so if you need to rescue_from ArgumentError, ... along with rescue_from Pagy::OverflowError, ... then the Pagy::OverflowError line should go BEFORE the ArgumentError line or it will never get rescued."]}],[{"l":"Pagy","p":["The scope of the Pagy class is keeping track of the all integers and variables involved in the pagination. It basically takes a few integers (such as the count of the collection, the page number, the items per page, ...), does some simple arithmetic and creates a very small object that allocates less than 3k of memory. (source)"]},{"l":"Synopsis"},{"l":"Global Default","p":["The Pagy::DEFAULT is a globally available hash used to set defaults variables. It is a constant for easy access, but it is mutable to allow customizable defaults. You can override it in the pagy.rb initializer file in order to set your own application global defaults. After you are done, you should freeze it, so it will not changed accidentally. It gets merged with the variables passed with the new method every times a Pagy instance gets created.","You will typically use it in a pagy.rb initializer file to pass defaults values. For example:"]},{"l":"Methods"},{"i":"pagyroot","l":"Pagy.root","p":["This method returns the pathname of the pagy/lib root dir. It is useful to get the absolute path of template, locale and javascript files installed with the gem."]},{"i":"pagynewvars","l":"Pagy.new(vars)","p":["Notice: If you use the Pagy::Backend its pagy method will instantiate and return the Pagy object for you.","The Pagy.new method accepts a single hash of variables that will be merged with the Pagy::DEFAULT hash and will be used to create the object."]},{"i":"series","l":"series(...)","p":["This method is the core of the pagination. It returns an array containing the page numbers and the :gap items to be rendered with the navigation links (e.g. [1, :gap, 7, 8, 9, 10, 11, :gap, 36]). It accepts an optional size keyword argument (only useful for extras), defaulted on the :size variable.","Notice: A :gap is added only where the series is missing at least two pages. When the series is missing only one page, the :gap is replaced with the page link of the actual missing page. That's because the page link uses the same space of the ... gap but it is more useful.","The nav helpers and the templates basically loop through this array and render the correct item by simply checking its type:","if the item is an Integer then it is a page link","if the item is a String then it is the current page","if the item is the :gap symbol then it is a gap in the series","That is self-contained, simple and efficient.","Notice: This method returns an empty array if the passed size(i.e. the :size variable by default) is set to an empty array. Useful to totally skip the generation of page links in the frontend."]},{"l":"label","p":["Experimental: Its only function in the Pagy class is supporting the API of various frontend methods that require labelling for Pagy::Calendar instances. It returns the current page label that will get displayed in the helpers/templates."]},{"i":"label_forpage","l":"label_for(page)","p":["Experimental: Its only function in the Pagy class is supporting the API of various frontend methods that require labelling for Pagy::Calendar instances. It returns the page label that will get displayed in the helpers/templates."]},{"l":"Variables","p":["All the variables passed to the new method will be merged with the Pagy::DEFAULT hash and will be kept in the object, passed around with it and accessible through the pagy.vars hash.","They can be set globally by using the Pagy::DEFAULT hash or passed to the Pagy.new method and are accessible through the vars reader.","Notice: Pagy replaces the blank values of the passed variables with their default values coming from the Pagy::DEFAULT hash. It also applies to_i on the values expected to be integers, so you can use values from request params without problems. For example: pagy(some_scope, items: params[:items]) will work without any additional cleanup."]},{"l":"Instance Variables","p":[":count",":items",":outset",":page","0","1","20","A few variables are particularly important for the calculation of the pagination, and therefore are validated and used to initialize a few instance variables.","Default","Description","nil","The initial offset of the collection to paginate: pass it only if the collection had an offset","The only mandatory instance variable to be passed is the :count of the collection to paginate: all the other variables are optional and have sensible defaults. Of course you will also have to pass the page or you will always get the default page number 1. They are all integers:","The requested number of items for the page","The requested page number","The total count of the collection to paginate (mandatory argument)","Variable"]},{"l":"Other Variables","p":[":cycle",":fragment",":i18n_key",":link_extra",":page",":page_param",":params",":request_path",":size","[1,4,4,1]","{}","Allows overriding the the request path for pagination links. If left blank, helpers will use request.path.","Default","Description","Enable cycling/circular/infinite pagination: true sets next to 1 when the current page is the last page","false","It can be a Hash of params to add to the URL, or a Proc that can edit/add/delete the request params (see How to customize the params)","pagy.item_name","The arbitrary fragment string (including the \"#\") to add to the url. (see How to customize the params)","The extra attributes string (formatted as a valid HTML attribute/value pairs) added to the page links (see How to customize the link attributes)","The i18n key to lookup the item_name that gets interpolated in a few helper outputs (see How to customize the item name)","The name of the page param name used in the url. (see How to customize the page param)","The size of the page links to show: array of initial pages, before current page, after current page, final pages. (see also How to control the page links)","There is no specific validation for non-instance variables.","Variable"]},{"l":"Attribute Readers","p":["count","Description","from","in","items","last","next","offset","page","pages","Pagy exposes all the instance variables needed for the pagination through a few attribute readers. They all return integers (or nil), except the vars hash:","params","prev","Reader","request_path","The :params variable ( Hash or Proc)","The collection :count","The collection-position of the first item in the page (:outset excluded)","The collection-position of the last item in the page (:outset excluded)","The current page number","The next page number or nil if there is no next page","The number of items skipped from the collection in order to get the start of the current page (:outset included)","The number of the items in the page","The number of the last page in the collection (same as pages but with ordinal meaning)","The number of total pages in the collection (same as last but with cardinal meaning)","The previous page number or nil if there is no previous page","The request path used for pagination helpers. If blank, helpers will use request.path","The requested number of items for the page","The variables hash","to","vars"]},{"l":"Lowest limit analysis","p":["[1]","0","1","Attribute","count","from","in","in, from and to of an empty page are all 0","last","next","nil","page","pages","pages and last are always at least both 1","prev","prev and next of a single page (not necessary an empty one) are both nil(i.e. there is no other page)","series","The lowest possible limit of the pagination is reached when the collection has 0 count. In that case the Pagy object created has the following peculiar attributes:","the series array contains always at least the page # 1, which for a single page is also the current page, thus a string. With size: [] the series method returns []","there is always a page# 1 in the pagination, even if it's empty","to","Value","Which means:"]},{"l":"Exceptions"},{"i":"pagyvariableerror","l":"Pagy::VariableError","p":["A subclass of ArgumentError that offers a few information for easy exception handling when some of the variable passed to the constructor is not valid.","Mostly useful if you want to rescue from bad user input (e.g. illegal URL manipulation)."]},{"i":"pagyoverflowerror","l":"Pagy::OverflowError","p":["A subclass of Pagy::VariableError: it is raised when the :page variable exceeds the maximum possible value calculated for the :count, i.e. the :page variable is in the correct range, but it's not consistent with the current :count. That may happen when the :count has been reduced after a page link has been generated (e.g. some record has been just removed from the DB). See also the overflow extra."]}],[{"i":"#","p":["This module provides the base functionality for the backend."]},{"i":"pagybackend","l":"Pagy::Backend","p":["This module (see source) provides a generic pagination method ( pagy) that works with ActiveRecord out of the box. For any other collection (e.g. Sequel, Mongoid, Elasticsearch, ...) you may need to override some sub-method or write your own Pagy methods.","For overriding convenience, the pagy method calls two sub-methods that you may need to override in order to customize it for any type of collection (e.g. different ORM types, Array, elasticsearch results, etc.).","Notice: Keep in mind that the whole module is basically providing a single functionality: getting a Pagy instance and the paginated items. You could re-write the whole module as one single and simpler method specific to your need, eventually gaining a few IPS in the process. If you seek a bit more performance you are encouraged to write your own Pagy methods.","Check also the array, searchkick, elasticsearch_rails and meilisearch extras for specific backend customizations."]},{"l":"Synopsis"},{"l":"Methods","p":["All the methods in this module are prefixed with the pagy_ string, to avoid any possible conflict with your own methods when you include the module in your controller. They are also all private, so they will not be available as actions. The methods prefixed with the pagy_get_ string are sub-methods/getter methods that are intended to be overridden, not used directly.","Please, keep in mind that overriding any method is very easy with Pagy. Indeed you can do it right where you are using it: no need of monkey-patching or perform any tricky gimmickry."]},{"i":"pagycollection-varsnil","l":"pagy(collection, vars=nil)","p":["This is the main method of this module. It takes a collection object (e.g. a scope), and an optional hash of variables (passed to the Pagy.new method) and returns the Pagy instance and the page of records. For example:","The built-in pagy method is designed to be easy to customize by overriding any of the two sub-methods that it calls internally. You can independently change the default variables ( pagy_get_vars) and/or the default page of items from the collection pagy_get_items).","If you need to use multiple different types of collections in the same app or action, you may want to define some alternative and self contained custom pagy method. (see Writing your own Pagy methods)"]},{"i":"pagy_get_varscollection-vars","l":"pagy_get_vars(collection, vars)","p":["Sub-method called only by the pagy method, it returns the hash of variables used to initialize the Pagy object.","Override it if you need to add or change some variable. For example you may want to add the :i18n_key in order to customize output (see How to customize the item name), or even cache the count.","IMPORTANT: :count and :page are the only 2 required Pagy core variables, so be careful not to remove them from the returned hash.","See also the How To page for some usage example."]},{"i":"pagy_get_itemscollection-pagy","l":"pagy_get_items(collection, pagy)","p":["Sub-method called only by the pagy method, it returns the page items (i.e. the records belonging to the current page).","Here is its source (it works with most ORMs like ActiveRecord, Sequel, Mongoid, ...):","Override it if the extraction of the items from your collection works in a different way. For example, if you need to paginate an array:","Notice: in order to paginate arrays, you may want to use the array extra."]},{"l":"Writing your own Pagy methods","p":["Sometimes you may need to paginate different kinds of collections (that require different overriding) in the same controller, so using one single pagy method would not be an option.","In that case you can define a number of pagy_* custom methods specific for each collection.","For example: here is a pagy method that doesn't call any sub-method, that may be enough for your needs:","You can easily write a pagy method for any possible environment: please read how to Paginate Any Collection for details.","IMPORTANT: If you write some useful backend customization, please let us know if you can submit a PR for a specific extra or if you need any help to do it."]}],[{"i":"pagycalendar","l":"Pagy::Calendar","p":["This is a Pagy subclass that provides pagination filtering by time: year, quarter, month, week, day (and supports your own custom time units).","Notice: It requires the activesupport gem, which you have to require in your Gemfile only if your app does not use Rails.","Notice: The Pagy::Calendar::* subclasses provide support for the calendar extra and are meant to be used with standard, non-calendar Pagy classes and never alone (because they could generate a very high number of items per page). The class APIs are documented here, however you should not need to use them directly because they are required and used internally by the extra."]},{"l":"Overview","p":["The pagy Pagy::Calendar::* instances split a time period into pages of equal time unit. For example: with Pagy::Calendar::Year you will have one page per each different calendar year so each page can be filtered to contain all the records that fall into the specific page/year. The Pagy::Calendar::Quarter, Pagy::Calendar::Month, Pagy::Calendar::Week and Pagy::Calendar::Day classes have the same functions for their respective time units.","Each page is also conveniently labeled in the navigation bar with the specific Time period it refers to.","IMPORTANT: This classes respects the natural calendar units, not the duration of a unit. If you paginate by year, each page will be a calendar year starting January 1st and ending December 31st, not a period starting and ending at two arbitrary dates one year apart. All the classes follow the same principle. Time units with no records are displayed as empty pages."]},{"l":"Variables","p":["Being subclasses of Pagy, the Pagy::Calendar::* classes share most of their superclass infrastructure and variables, however they use a completely different way to paginate (e.g.: no :count nor :items variables) and they have a few extra core variables.","The following variables are specific to Pagy::Calendar::* instances:","Variable","Description","Default",":period","Required two items Array with the calendar starting and ending local TimeWithZone objects","nil",":order","Order of pagination: it can be:asc or :desc",":asc",":format","String containing the strftime extendable format used for labelling (each subclass has its own default)","Notice: For the Pagy::Calendar::Quarter the :format variable can contain a non-standard %q format which is substituted with the quarter (1-4)."]},{"l":"DEFAULT variables","p":["The calendar defaults are not part of the Pagy::DEFAULT variables. Each subclass has its own Pagy::Calendar::*::DEFAULT variable hash that you can set independently. See the pagy.rb configuration file for details."]},{"l":"Attribute Readers","p":["Reader","Description","from","The local TimeWithZone of the start of the current page","to","The local TimeWithZone of the end of the current page","order","The :order variable"]},{"l":"About from and to objects","p":["The from is the beginning of the current time unit. Notice that for the first page it falls BEFORE the starting of the :period.","The to is the beginning of the next time unit. Notice that for the last page it falls AFTER the ending of the :period.","The cases for first and last pages have no effect when you use the from/ to as a collection filter, since the collection is already filtered by the :period so there are no records outside it."]},{"l":"Time conversions","p":["This classes can use the recommended ActiveSupport::TimeWithZone class or the ruby Time class for all their time calculations.","Since they are meant to be used in the UI, they use the user/server local time in order to make sense for the UI. For that reason their input (the :period variable) and output (the from and to accessors) are always local time.","If you use ActiveRecord, your app should set the Time.zone for your user or your server. Then you can convert an UTC time from the storage to a local TimeWithZone object for the calendar very easily with:","You can also convert from local to UTC time with local_time.utc, however, when you use it as an argument in a scope, ActiveRecord converts it for you."]},{"l":"First weekday","p":["Set the Date.beginning_of_week toto the symbol of the first day of the week (e.g. Date.beginning_of_week = :sunday). Notice the default is :monday consistently with the ISO-8601 standard (and Rails)."]},{"l":"Files","p":["calendar.rb","calendar units"]},{"l":"Methods","p":["This method uses the :format variable to generate the current page label with the specific TimeWithZone period it refers to. It accepts an optional :format keyword argument for overriding.","This method takes a page number argument ( Integer or String) and uses the :format variable to generate its label with the specific Time period it refers to. It accepts an optional :format keyword argument for overriding."]},{"l":"Custom units","p":["You can define your own custom unit of any time length. For example you may want to add a unit of 2 months (i.e. a \"bimester\" unit), which should define a Pagy::Calendar::Bimester class.","In order to allow its full integration, you should also insert your :bimester unit symbol in the Pagy::Calendar::UNITS list, between :quarter and :month, which will keep the list in desc order of duration.","You can also implement your own custom substitution formats for your custom units, by overriding the label_for(page, opts)."]}],[{"i":"pagyconsole","l":"Pagy::Console","p":["Standard pagination requires controller, model, view and request to work, however you don't have to satisfy all that requirements in order to get any helper working in the irb/rails console.","You can try any feature right away, even without any app nor configuration right in the irb/rails console:"]},{"i":"pagyconsole-module","l":"Pagy::Console module","p":["The pagy console uses the standalone extra and sets the Pagy::DEFAULT[:url] variable default to http://www.example.com/subdir in order to activate the standalone mode.","Include the module in your console window in order to include also the Pagy::Backend and Pagy::Frontend modules."]},{"i":"pagy_extrasextras","l":"pagy_extras(*extras)","p":["Simple utility method to save some typing in the console. It will require the extras arguments. For example:","You will be able to use any frontend or backend method implemented by pagy and the required extras right away."]}],[{"i":"pagycountless","l":"Pagy::Countless","p":["This is a Pagy subclass (see source) that provides pagination without the need of any :count. That may be especially useful in the following scenarios:","slow COUNT(*) query - result of large tables or poorly optimized DBs","large collections of items where the count is missing or irrelevant","minimalistic UI, infinite scrolling, APIs that don't benefit from a nav-bar","when the full nav-bar is not a requirement and/or performance is more desirable","This class provides support for extras that don't need the full set of pagination support or need to avoid the :count variable (e.g. the countless extra). The class API is documented here, however you should not need to use this class directly because it is required and used internally by the extra."]},{"l":"Caveats","p":["In this class the :count variable is always nil, hence some feature that depends on it may have limited or no support:"]},{"l":"Features with limited support"},{"l":"Nav bar","p":["The nav bar links after the current page cannot be fully displayed because a couple of items of the :size array depends on the count, so they have some limitations.","Regardless the actual :size value:","vars[:size][2] is capped at 1 (we know only if the next page exists)","vars[:size][3] is set to 0 (we don't know the total pages)","A few examples:","[1,4,4,1] would be treated like [ 1,4,1,0]","[1,4,3,4] would be treated like [ 1,4,1,0]","[1,4,0,0] would be treated like [ 1,4,0,0]","The series method reflects on the above."]},{"i":"overflow-variable","l":":overflow variable","p":["The available values for the :overflow variable are :empty_page and :exception, missing the :last_page(which is not known in case of an exception)."]},{"l":"Features without support","p":["The pagy_info and all the *_combo_nav_js helpers that use the total count are not supported."]},{"l":"How countless pagination works","p":["Instead of basing all the internal calculations on the :count variable (passed with the constructor), this class uses the number of actually retrieved items to deduce the pagination variables.","The retrieved items number can be passed in a second step to the finalize method, which allows pagy to determine if there is a next page, or if the current page is the last page, or if the current request should raise a Pagy::OverflowError exception.","Retrieving these variables may be useful to supply a UI as complete as possible, when used with classic helpers, and can be skipped when it's not needed (like for navless pagination, infinite-scroll, etc.). See the countless.rb extra for more details."]},{"l":"Methods","p":["The construction of the final Pagy::Countless object is split into 2 steps: the regular initialize method and the finalize method, which will use the retrieved items number to calculate the rest of the pagination integers."]},{"i":"pagycountlessnewvars","l":"Pagy::Countless.new(vars)","p":["The initial constructor takes the usual hash of variables, calculating only the requested items and the offset, useful to query the page of items."]},{"i":"finalizefetched_size","l":"finalize(fetched_size)","p":["The actual calculation of all the internal variables for the pagination is calculated using the size of the fetched items. The method returns the finalized instance object."]}],[{"i":"pagyfrontend","l":"Pagy::Frontend","p":["This module provides a few methods to deal with the navigation aspect of the pagination. You will usually include it in some helper module, making its methods available (and overridable) in your views. (source)","You can extend this module with a few more nav helpers (see the extras doc for more details)"]},{"l":"Synopsis","p":["use some of its method in some view:"]},{"l":"Methods","p":["All the methods in this module are prefixed with the pagy_ string in order to avoid any possible conflict with your own methods when you include the module in your helper. The methods prefixed with the pagy_get_ string are sub-methods/getter methods that are intended to be overridden and not used directly.","Please, keep in mind that overriding any method is very easy with Pagy. Indeed you can do it right where you are using it: no need of monkey-patching or tricky gimmickry."]},{"i":"pagy_navpagy-","l":"pagy_nav(pagy, ...)","p":["This method takes the Pagy object and returns the HTML string with the pagination links, which are wrapped in a nav tag and are ready to use in your view. For example:","The method accepts also a few optional keyword arguments:",":pagy_id which adds the id HTML attribute to the nav tag",":link_extra which add a verbatim string to the a tag (e.g. 'data-remote=true')",":size which use the passed size Array instead of the :size variable of the instance","The nav.* templates produce the same output, and can be used as an easier (but slower) way to customize it.","See also Using templates."]},{"i":"pagy_infopagy-pagy_id--item_name--i18n_key-","l":"pagy_info(pagy, pagy_id: ..., item_name: ..., i18n_key: ...)","p":["This method provides the info about the content of the current pagination. For example:","Will produce something like:","Displaying items 476-500 of 1000 in total","The method accepts also a few optional keyword arguments:",":pagy_id which adds the id HTML attribute to the span tag wrapping the info",":item_name an already pluralized string that will be used in place of the default item/items",":i18n_key the key to lookup in a dictionary","Notice the :i18n_key can be passed also to the constructor or be a less useful global variable (i.e. Pagy::DEFAULT[:i18n_key]","Displaying Products 476-500 of 1000 in total","(see Customizing the item name)"]},{"i":"pagy_url_forpagy-page-absolute-false-html_escaped-false","l":"pagy_url_for(pagy, page, absolute: false, html_escaped: false)","p":["This method is called internally in order to produce the url of a page by passing it its number. For standard usage it works out of the box and you can just ignore it.","It works by merging the pagy :params hash with the raw request.GET, and adding the :page_param(:page by default) set to the passed page, and the :items if the :items_extra is enabled.","Before producing the final URL (which can be absolute if you pass absolute: true), it passes the resulting params hash to the pagy_massage_params method, which can be overridden for total control of the params in the URL.","The query_string can also be html_escaped to be used in html tags (avoiding the problem of concatenation of params that start with an html entity key).","The :fragment variable is also appended to the URL if defined.","See also How to customize the URL."]},{"i":"pagy_massage_paramsparams","l":"pagy_massage_params(params)","p":["The pagy_massage_params method has been deprecated and it will be ignored from version 6. Use the :params variable instead.","See also How to customize the params."]},{"i":"pagy_link_procpagy-link_extra","l":"pagy_link_proc(pagy, link_extra='')","p":["This method is called internally to get a very specialized and fast proc that produce the HTML links for the pages.","For standard usage you may just need to read How to customize the link attributes, for advanced usage see below."]},{"l":"Advanced Usage","p":["You need this section only if you are going to override a pagy_nav* helper or a template AND you need to customize the HTML attributes of the link tags.","Important: This method is not intended to be overridden, however you could just replace it in your overridden pagy_nav* helpers or templates with some generic helper like the rails link_to. If you intend to do so, be sure to have a very good reason, since using pagy_link_proc is a lot faster than the rails link_to(benchmarked at ~ 22x faster using ~ 18x less memory on a 20 links nav).","This method returns a specialized proc that you call to produce the page links. The reason it is a two steps process instead of a single method call is performance. Indeed the method calls the potentially expensive pagy_url_for only once and generates the proc, then calling the proc will just interpolates the strings passed to it.","Here is how you should use it: in your helper or template call the method to get the proc (just once):","Then call the link proc to get the links (multiple times):"]},{"l":"Extra attribute strings","p":["If you need to add some HTML attribute to the page links, you can pass some extra attribute string at many levels, depending on the scope you want your attributes to be added.","Important: For performance reasons, the extra attributes strings must be formatted as valid HTML attribute/value pairs. All the strings passed at any level will get inserted verbatim in the HTML of the link.","For all pagy objects: set the global variable :link_extra:","For one Pagy object: pass the :link_extra variable to a Pagy constructor ( Pagy.new or pagy controller method):","For all the link.call: pass an extra attributes string to the pagy_link_proc:","For a single link.call: pass an extra attributes string when you call the proc:"]},{"l":"CAVEATS","p":["We use only strings for performance, so the attribute strings get concatenated level after level, but not merged!","Be careful not to pass the same attribute at different levels multiple times. That would generate a duplicated HTML attribute which is illegal html (although handled by all mayor browsers by ignoring all the duplicates but the first).","Specifically do not add a class attribute that will end up in the pagy_bootstrap_nav_js, pagy_semantic_nav_js and pagy_semantic_combo_nav_js, which define already their own."]},{"i":"pagy_tkey-vars","l":"pagy_t(key, vars=","p":["This method is similar to the I18n.t and its equivalent rails t helper. It is called internally (from helpers and templates) in order to get the interpolated strings out of a YAML dictionary file. (see I18n below)"]},{"l":"I18n","p":["Pagy can provide i18n using its own recommended super fast implementation (see the Pagy::I18n doc) or can use the slower standard i18n gem (see the i18n extra doc)."]},{"i":"dictionarieslocales","l":"Dictionaries/locales","p":["Pagy provides many ready-to-use dictionaries for different locales/languages usable with single or multi languages apps.","All the pagy strings are are stored in the dictionary files of its locales, ready to be customized and/or used with or without the I18n gem. The files follow the same structure of the standard locale files for the i18n gem.","IMPORTANT: if you are using pagy with some language missing from the locales, please, submit your translation!"]}],[{"i":"pagyi18n","l":"Pagy::I18n","p":["This module provides the Pagy implementation of the i18n translation method used internally ( pagy_t). It's ~ 18x faster and uses ~ 10x less memory than the standard i18n gem.","See the i18n extra doc if you need to use the slower standard i18n gem instead."]},{"l":"Configuration","p":["Notice: If your app uses only the default en language or if you use the i18n extra you don't need to configure anything for this module.","If you need to load different built-in locales, and/or custom dictionary files or even non built-in language and pluralization, you can do it all by passing a few arguments to the Pagy::I18n.load method."]},{"l":"Synopsis","p":["Notice: You should use a custom :pluralize proc only for pluralization types not included in the built-in pluralization rules (stored in the Pagy::I18n::P11n::RULE hash).","The :pluralize proc should receive the count as a single argument and should return the plural type string (e.g. something like 'one' or 'other', depending on the passed count)."]},{"l":"Setting the request locale in multi-language apps","p":["When you configure multiple locales (i.e. this does not apply to single locale apps), you must also set the locale at each request. You usually do that in the application controller, by checking the :locale param. For example, in a rails app you should do something like:","If the @pagy_locale is nil or missing pagy will serve the first locale you set in the configuration."]},{"l":"Adding the model translations","p":["If you use the pagy_info OR pagy_items_selector_js AND you also want to use the specific model names instead of the generic \"items\" string, THEN you may need to add entries for the models in the pagy dictionary files. For example:","(See also the pagy_info method and How to customize the item name)"]}],[{"l":"Javascript"},{"l":"Overview","p":["A few helpers use Javascript and offer some extra feature and require some extra setup."]},{"l":"Advantages","p":["Better performance and resource usage (see Maximizing Performance)","Client-side rendering","Optional responsiveness"]},{"l":"Helpers","p":["bootstrap_combo_nav_js","bootstrap_nav_js","Navigation and pagination info combined.","pagy_bootstrap_combo_nav_js","pagy_bootstrap_nav_js","pagy_bulma_combo_nav_js","pagy_bulma_nav_js","pagy_combo_nav_js","pagy_foundation_combo_nav_js","pagy_foundation_nav_js","pagy_materialize_combo_nav_js","pagy_materialize_nav_js","pagy_nav_js","pagy_semantic_combo_nav_js","pagy_semantic_nav_js","See Pagy Combo Navs","See Pagy Navs","To be done:(i) add a picture(ii) list the methods available.(iii) link to further information"]}],[{"l":"Javascript Setup","p":["A javascript setup is required only for the pagy*_js helpers. Just using 'data-remote=true' in any other helper works out of the box.","Add the oj gem to your gemfile for faster performance."]},{"i":"how-does-it-work","l":"How does it work?","p":["All the pagy*_js helpers render their component on the client side. The helper methods render just a minimal HTML tag that contains a data-pagy attribute.","Your app should serve a small javascript file that will take care of converting the data embedded in the data-pagy attribute and make it work in the browser.","We don't publish a npm package, because it would not support automatic sync with the gem version."]},{"l":"1. Pick a Javascript File","p":["and_chr 103","and_ff 101","and_qq 10.4","and_uc 12.12","android 103","chrome 101","chrome 102","chrome 103","edge 102","edge 103","ES6 module","ESM File: pagy-module.js; Types: pagy-module.d.ts","firefox 101","firefox 102","firefox 91","ios_saf 12.2-12.5","ios_saf 14.0-14.4","ios_saf 14.5-14.8","ios_saf 15.2-15.3","ios_saf 15.4","ios_saf 15.5","It contains the source map to debug typescript","It works only on new browsers","It's an IIFE;","JS File: pagy-dev.js","JS File: pagy.js","kaios 2.5","Large size","Minified (~ 2k).","op_mini all","op_mob 64","opera 85","opera 86","opera 87","safari 15.5","You can generate custom targeted pagy.js files for the browsers you want to support by changing the browserslist query in src/package.json, then compile it with npm run build -w src.","You need to debug the javascript helpers","Your app needs standard script or old browser compatibility","Your app uses modern build tools"]},{"l":"2. Load the file","p":["Depending on your environment you have a few ways of loading the required JS file:"]},{"l":"Rails with assets pipeline","p":["In older versions of Rails, you can configure the assets to look into the installed pagy gem files:"]},{"l":"Non-Rails apps","p":["Just ensure Pagy.root.join('javascripts', 'pagy.js') is served with the page."]},{"l":"3. Initialize Pagy","p":["After the file is loaded, you have to initialize Pagy:"]},{"l":"Caveats","p":["If Javascript is disabled in the client browser, certain helpers will be useless. Consider implementing your own HTML fallback:","The pagy*_js helpers are tightly coupled with the javascript code, so any partial overriding on one side, would be quite fragile and might break in a next release."]}],[{"l":"Javascript Navs","p":["The following pagy*_nav_js helpers:","pagy_nav_js","pagy_bootstrap_nav_js","pagy_bulma_nav_js","pagy_foundation_nav_js","pagy_materialize_nav_js","pagy_semantic_nav_js","look like a normal pagy*_nav but have a few added features:","Client-side rendering","Optional responsiveness","Better performance and resource usage (see Maximizing Performance)","Here is a screenshot (from the bootstrap extra) showing responsiveness at different widths:","bootstrap_nav_js"]},{"l":"Synopsis","p":["See Setup Javascript."]},{"l":"Variables","p":[":steps","As usual, depending on the scope of the customization, you can set the variables globally or for a single pagy instance, or even pass it to the pagy*_nav_js helper as an optional keyword argument.","Default","Description","false","For example:","Hash variable to control multiple pagy :size at different widths","Here is what you should consider/ensure:","If the container width snaps to specific widths in discrete steps, you should sync the quantity and widths of the pagy :steps to the quantity and internal widths for each discrete step of the container.","IMPORTANT: You can set any number of steps with any arbitrary width/size. The only requirement is that the :steps hash must contain always the 0 width or a Pagy::VariableError exception will be raised.","Setting the widths and sizes can create a nice transition between widths or some apparently erratic behavior.","The :steps is an optional non-core variable used by the pagy*_nav_js navs. If it's false, the pagy*_nav_js will behave exactly as a static pagy*_nav respecting the single :size variable, just faster and lighter. If it's defined as a hash, it allows you to control multiple pagy :size at different widths.","The above statement means that from 0 to 540 pixels width, Pagy will use the [2,3,3,2] size, from 540 to 720 it will use the [3,5,5,3] size and over 720 it will use the [5,7,7,5] size. (Read more about the :size variable in the How to control the page links section).","The automatic transition from one size to another depends on the width available to the pagy nav. That width is the internal available width of its container (excluding eventual horizontal padding).","The pagy size changes in discrete :steps, defined by the width/size pairs.","The pagy_*nav_js elements are automatically re-rendered on window resize. However, if the container width changes without being triggered by a window resize, you need to explicitly re-render:","Variable","You can set the :steps as a hash where the keys are integers representing the widths in pixels and the values are the Pagy :size variables to be applied for that width.","You should ensure that - for each step - each pagy :size produces a nav that can be contained in its width.","You should ensure that the minimum internal width for the container div be equal (or a bit bigger) to the smaller positive width. ( 540 pixels in our previous example)."]},{"l":"Methods"},{"i":"pagy_nav_jspagy-","l":"pagy*_nav_js(pagy, ...)","p":["The method accepts also a few optional keyword arguments:",":pagy_id which adds the id HTML attribute to the nav tag",":link_extra which add a verbatim string to the a tag (e.g. 'data-remote=true')",":steps variable","The pagy_bootstrap_nav_js and pagy_semantic_nav_js assign a class attribute to their links, so do not add another class attribute with the :link_extra. That would be illegal HTML and ignored by most browsers."]}],[{"l":"Javascript Combo Navs","p":["The following pagy*_combo_nav_js offer an alternative pagination UI that combines navigation and pagination info in a single compact element:","pagy_combo_nav_js","pagy_bootstrap_combo_nav_js","pagy_bulma_combo_nav_js","pagy_foundation_combo_nav_js","pagy_materialize_combo_nav_js","pagy_semantic_combo_nav_js","They are the fastest and lightest nav on modern environments, recommended when you care about efficiency and server load (see Maximizing Performance).","Here is a screenshot (from the bootstrap extra):","bootstrap_combo_nav_js"]},{"l":"Synopsis","p":["See Setup Javascript."]},{"l":"Methods"},{"i":"pagy_combo_nav_jspagy-","l":"pagy*_combo_nav_js(pagy, ...)","p":["The method accepts also a couple of optional keyword arguments:",":pagy_id which adds the id HTML attribute to the nav tag",":link_extra which add a verbatim string to the a tag (e.g. 'data-remote=true')","The pagy_semantic_combo_nav_js assigns a class attribute to its links, so do not add another class attribute with the :link_extra. That would be illegal HTML and ignored by most browsers."]}],[{"l":"Using AJAX","p":["If you AJAX-render any of the javascript helpers mentioned above, you should also execute Pagy.init(container_element); in the javascript template. Here is an example for an AJAX-rendered pagy_bootstrap_nav_js:","In pagy_remote_nav_js controller action (notice the link_extra to enable AJAX):","In pagy_remote_nav_js.html.erb template for non-AJAX render (first page-load):","In _nav_js.html.erb partial shared for AJAX and non-AJAX rendering:","In pagy_remote_nav_js.js.erb javascript template used for AJAX:","IMPORTANT: The document.getElementById('container') argument will re-init the pagy elements just AJAX-rendered in the container div. If you miss it, it will not work."]}],[{"l":"Arel Extra","p":["This extra adds a specialized pagination for collections from sql databases with GROUP BY clauses, by computing the total number of results with COUNT(*) OVER ().","Tested against MySQL (8.0.17) and Postgres (11.5). Before using in a different database, make sure the sql COUNT(*) OVER () performs a count of all the lines after the GROUP BY clause is applied."]},{"l":"Synopsis"},{"l":"Files","p":["arel.rb"]},{"l":"Methods","p":["This method is the same as the generic pagy method, but with improved speed for SQL GROUP BY collections. (see the pagy doc)","This sub-method is the same as the pagy_get_vars sub-method, but it is called only by the pagy_arel method. (see the pagy_get_vars doc).","This sub-method it is called only by the pagy_get_vars method. It will detect which query to perform based on the active record groups (sql GROUP BY s). In case there aren't group values performs a normal .count(:all), otherwise it will perform a COUNT(*) OVER (). The last tells database to perform a count of all the lines after the GROUP BY clause is applied."]}],[{"l":"Array Extra","p":["Paginate arrays.","This warning may sound obvious, but I keep finding people improperly using this extra, so let me write it explicitly.","The array extra is efficient if you really need to paginate an array, but if the data in the array comes from some DB or other persisted storage (i.e. not some in-memory storage), then you should definitely review your code!","You should not pull the whole collection into an array (potentially wasting tons of memory), when you can pull just a single page of it by using the standard @page, @records = pagy(your_scope).","And if you think that it's the only way to do what you need, then... think again. \uD83E\uDDD0"]},{"l":"Synopsis"},{"l":"Files","p":["array.rb"]},{"l":"Methods","p":["This method is the same as the generic pagy method, but specialized for an Array. (see the pagy doc)","This sub-method is the same as the pagy_get_vars sub-method, but it is called only by the pagy_array method. (see the pagy_get_vars doc)."]}],[{"l":"Bootstrap Extra","p":["This extra adds nav helpers and templates for the Bootstrap pagination component."]},{"l":"Synopsis","p":["See Javascript if you use pagy_bootstrap_nav_js or pagy_bootstrap_combo_nav_js."]},{"l":"Files","p":["bootstrap.rb","bootstrap_nav.html.erb(optional template)","bootstrap_nav.html.haml(optional template)","bootstrap_nav.html.slim(optional template)"]},{"l":"Methods","p":["This extra adds 3 nav helpers to the Pagy::Frontend module. You can customize them by direct overriding in your own view helper."]},{"i":"pagy_bootstrap_navpagy-","l":"pagy_bootstrap_nav(pagy, ...)","p":["This method is the same as the pagy_nav, but customized for Bootstrap.","See the pagy_nav(pagy, ...) documentation.","The bootstrap_nav.* templates produce the same output, and can be used as an easier (but slower) starting point to override it. See How to use templates."]},{"i":"pagy_bootstrap_nav_jspagy-","l":"pagy_bootstrap_nav_js(pagy, ...)","p":["bootstrap_combo_nav_js","See the Javascript Navs documentation."]},{"i":"pagy_bootstrap_combo_nav_jspagy-","l":"pagy_bootstrap_combo_nav_js(pagy, ...)","p":["bootstrap_combo_nav_js","See the Javascript Combo Navs documentation."]}],[{"l":"Bulma Extra","p":["This extra adds nav helper and templates for the Bulma CSS pagination component."]},{"l":"Synopsis","p":["See Javascript if you use pagy_bulma_nav_js or pagy_bulma_combo_nav_js."]},{"l":"Files","p":["bulma.rb","bulma_nav.html.erb(optional template)","bulma_nav.html.haml(optional template)","bulma_nav.html.slim(optional template)"]},{"l":"Methods","p":["This extra adds 3 nav helpers to the Pagy::Frontend module. You can customize them by direct overriding in your own view helper."]},{"i":"pagy_bulma_navpagy","l":"pagy_bulma_nav(pagy)","p":["This method is the same as the pagy_nav, but customized for Bulma.","See the pagy_nav(pagy, ...) documentation.","The bulma_nav.* templates produce the same output, and can be used as an easier (but slower) starting point to override it. See How to use templates."]},{"i":"pagy_bulma_nav_jspagy-","l":"pagy_bulma_nav_js(pagy, ...)","p":["See the Javascript Navs documentation."]},{"i":"pagy_bulma_combo_nav_jspagy-","l":"pagy_bulma_combo_nav_js(pagy, ...)","p":["bulma_combo_nav_js","See the Javascript Combo Navs documentation."]}],[{"l":"Calendar Extra","p":["Add pagination filtering by calendar time unit: year, quarter, month, week, day (and your own custom time units).","This extra adds single or multiple chained calendar navs that act as calendar filters on the collection records, placing each record in its time unit.","calendar_app Screenshot from the single-file self-contained pagy_calendar_app.ru demo"]},{"l":"Use cases","p":["This extra makes sense when the result to paginate have some time continuity and you want to provide a simple chronological browsing. For example: a movie catalog could allow the user to browse all the movies by year, or you may want to browse a long list of events by jumping and narrowing between years, months, days.","On the other hand it does not make much sense for the result of a search that hits just a few sparse records scattered over a possibly long period of time. For that case the calendar extra has an :active flag that can be used to inactivate the calendar and fallback to the regular pagination. No need to maintain different UIs for wide browsing and narrow searching."]},{"l":"Synopsis","p":["Require and configure it in the pagy.rb initializer:","Implement and use it in your controllers:","Use the calendar and pagy objects in your views:","See also a few examples about How to wrap existing pagination with pagy_calendar.","Notice For a complete and detailed example, see the pagy_calendar_app.ru."]},{"l":"Usage","p":["Since the time can be stored or calculated in many different ways in different collections, this extra requires you to implement a couple of simple methods in your app and configure the objects that it creates and coordinates for you.","The whole usage boils down to these steps:","Define the pagy_calendar_period method in your controller","Define the pagy_calendar_filter method in your controller","Configure the pagy_calendar method in your action","Use it in your UI","You can play with a quick demo app, working without any additional configuration with:","Then point your browser to http://0.0.0.0:8080."]},{"l":"Variables and Accessors","p":["See Pagy::Calendar"]},{"l":"Files","p":["calendar.rb"]},{"l":"Methods","p":["All the methods in this module are prefixed with the pagy_calendar string in order to avoid any possible conflict with your own methods when you include the module in your controller. They are also all private, so they will not be available as actions."]},{"i":"pagy_calendarcollection-configuration","l":"pagy_calendar(collection, configuration)","p":["This method wraps one or more levels of calendar filtering on top of another backend pagination method (e.g. pagy, pagy_arel, pagy_array, pagy_searchkick, pagy_elasticsearch_rails, pagy_meilisearch, ...).","It filters the collection by the selected time units in the configuration(e.g. year, month, day, ...), and forwards it to the wrapped method.","It returns an array with one more item than the usual two:","The @calendar contains the hash of the generated Pagy::Calendar::* objects that can be used in the UI."]},{"l":"collection argument","p":["The collection argument (from ActiveRecord, ElasticSearchRails, Searchkick, Meilisearch, ...) is filtered by the pagy_calendar_filter and forwarded to the wrapped method for its final pagination, so ensure that you pass the same type of argument expected by the wrapped method."]},{"l":"configuration argument","p":["The configuration argument must be a Hash structure with the keys representing the type of configuration and the values being the Hash of the variables that you want to pass for the creation of the specific pagy object (or a boolean for the Active flag).","The configuration hash can be composed by the following types of configuration:"]},{"l":"Calendar configuration","p":["The calendar configuration determines the calendar objects generated. These are used for filtering the collection to the selected time units.","You can add one or more levels with keys like :year, :quarter, :month, :week, :day. Each key must be set to the hash of the variables that will be used to initialize the relative Pagy::Calendar::* object. Use an empty hash for default values. E.g.: year: {}, month: {}, ....","Restrictions: The :page, :page_param, :params and :period variables for the calendar objects are managed automatically by the extra. Setting them explicitly has no effect. (See also Calendar params for solutions in case of conflicts)"]},{"l":"Pagy configuration","p":["This is the optional configuration of the final pagination object (produced by the wrapped method) which is always used regardless the value of the Active flag.","You can pass one optional :pagy key, set to the hash of the variables to initialize the Pagy object. It has none of the restriction mentioned in the Calendar configuration.","Besides the usual pagy variables, you can add a :backend variable, set to the name of the backend extra method that you want to use for managing the collection:","Notice that the collection argument must be exactly what you would pass to the wrapped backend method.","If the :pagy key/value is omitted, a default Pagy instance will be created by the default :pagy backend method."]},{"l":"Active flag","p":["The calendar is active by default, however you can add an optional :active boolean flag to the configuration hash in order to switch it ON or OFF, depending on its usefulness in different conditions (see the Use cases).","Take a look at the pagy_calendar_app.ru for a simple example of a manual toggle in the UI."]},{"i":"pagy_calendar_periodcollection","l":"pagy_calendar_period(collection)","p":["This method must be implemented by the application.","It receives a collection argument that must not be changed by the method, but can be used to return the starting and ending local TimeWithZone objects array defining the calendar :period. See the Pagy::Calendar Variables for details.","Depending on the type of storage, the collection argument can contain a different kind of object:"]},{"l":"ActiveRecord managed storage","p":["If you use ActiveRecord the collection is going to be an ActiveRecord::Relation object. You can use it to return the starting and ending local TimeWithZone objects array. Here are a few examples with the created_at field (but you can pull the time from anywhere):","See also Time conversion for details."]},{"l":"Search frameworks storage","p":["If you use ElasticSearchRails, Searchkick, Meilisearch the collection argument is just the Array of the captured search arguments that you passed to the Model.pagy_search method. That array is what pagy uses internally to setup its variables before passing it to the standard Model.search method to do the actual search.","So you should use what you need from the collection array and do your own Model.search(...) in order to get the starting and ending local TimeWithZone objects array to return."]},{"i":"pagy_calendar_filtercollection-from-to","l":"pagy_calendar_filter(collection, from, to)","p":["This method must be implemented by the application.","It receives the main collection and must return a filtered version of it using the from and to local Time objects.","You should filter your collection with a logic equivalent to storage_time = from storage_time to, adapted to the time zone and syntax of your storage.","Depending on the type of storage, the collection argument can contain a different kind of object:"]},{"i":"activerecord-managed-storage-1","l":"ActiveRecord managed storage","p":["If you use ActiveRecord the collection is going to be an ActiveRecord::Relation object that you can easily filter. Here is an example with the created_at field again (but you can use anything, of course):","See also Time conversion for details."]},{"i":"search-frameworks-storage-1","l":"Search frameworks storage","p":["If you use ElasticSearchRails, Searchkick, Meilisearch the collection argument is just the Array of the captured search arguments that you passed to the Model.pagy_search method. That array is what pagy uses internally to setup its variables before passing it to the standard Model.search method to do the actual search.","So in order to filter the actual search with the from and to local TimeWithZone objects, you should simply return the same array with the filtering added to its relevant item. Pagy will use it to do the actual (filtered) search."]},{"l":"Customization"},{"l":"Order","p":["If you set :order to :desc, you will get the page units in descendent order (e.g. May, then April, then March, ...), but keep in mind that you still have to desc-order the records in the collection since pagy has no control over that (indeed it's your own collection scope)."]},{"l":"Beginning of week","p":["If you use the :week time unit, consider that the first day of the week could be different for different locales.","You may want to adjust it by setting the Date.beginning_of_week variable to the symbol of the first day of the week (e.g. Date.beginning_of_week = :sunday). Notice the default is :monday consistently with the ISO-8601 standard (and Rails)."]},{"l":"Calendar params","p":["This extra handles the request params of its objects automatically, and you should not need to customize them unless they conflict with other params in your requests. In that case you have a couple of alternatives:","Renaming the conflicting param of your app","Passing a custom :page_param to the Pagy configuration. That will internally rename the :page_param vars and update the :params procs of all the calendar objects accordingly."]},{"l":"View","p":["You can use the calendar objects with any pagy_*nav and pagy_*nav_js helpers or any templates in your views.","The pagy_*combo_nav_js keeps into account only page numbers and not labels, so it is not very useful (if at all) with Pagy::Calendar::* objects."]},{"i":"pagy_calendar_url_atcalendar-time","l":"pagy_calendar_url_at(@calendar, time)","p":["This helper takes the @calendar and a TimeWithZone objects and returns the url complete with all the params for the pages in each bars that include the passed time.","For example: pagy_calendar_url_at(@calendar, Time.zone.now) will select the the bars pointing to today. You can see a working example in the pagy_calendar_app.ru file.","If time is outside the pagination range it raises a Pagy::Calendar::OutOfRangeError."]},{"l":"Label format","p":["Each page link in the calendar navs is conveniently labeled with the specific Time period it refers to. You can change the time format to your needs by setting the :format variable to a standard strftime format. (See the Pagy::Calendar variables)","You can also get the label method with e.g.: @calendar[:month].label, which might be useful to use in your UI."]},{"l":"I18n localization","p":["Pagy implements its own faster version of the i18n translate method (i.e. pagy_t), but does not provide any built-in localize method. If you need localization of calendar labels in other locales, you should delegate it to the I18n gem, so that a change in the global I18n.locale will automatically localize all the time labels accordingly.","You have a couple of options:","Use the i18n extra, which delegates the translation and localization to the I18n gem. Notice however that you would lose the performance gain offered by the built-in pagy_t translation.","Uncomment the block in the calendar section in the pagy.rb initializer, which will add the localization from the I18n gem without using the i18n extra, so preserving the builtin pagy_t translation."]},{"l":"Caveats","p":["Calendar pages with no records are accessible but empty: you may want to display some message when @records.empty?."]}],[{"l":"Countless Extra","p":["Save one count query per request using the Pagy::Countless subclass internally."]},{"l":"Setup"},{"l":"Modes","p":["This extra can be used in two different modes by enabling or not the :countless_minimal variable.","Your app needs a full classic pagination UI","This mode retrieves items + 1, and uses the number of retrieved items to calculate the variables. It then removes the extra item from the result.","The @records collection is an eager-loaded Array of records.","The @pagy object can be used with any supported helper.","Your app uses no or limited pagination UI","This mode is enabled by the :countless_minimal variable.","The @records collection is a regular scope.","The @pagy object cannot be used with any helpers.","The collection is over when @records.size @pagy.vars[:items]."]},{"l":"Variables","p":["Variable","Description","Default",":countless_minimal","enable the countless minimal mode","false"]},{"l":"Files","p":["countless.rb"]},{"l":"Methods","p":["This method is the same as the generic pagy method (see the pagy doc), however its returned objects will depend on the value of the :countless_minimal variable (see Modes)","This sub-method is similar to the pagy_get_vars sub-method, but it is called only by the pagy_countless method. (see the pagy_get_vars doc).","This sub-method is similar to the pagy_get_items sub-method, but it is called only by the pagy_countless method. (see the pagy_get_items doc)."]}],[{"l":"Elasticsearch Rails Extra","p":["Paginate ElasticsearchRails response objects."]},{"l":"Setup"},{"l":"Modes","p":["This extra offers two ways to paginate ElasticsearchRails response objects.","You use the pagy_search method in place of the search method.","Pagy creates its object out of your result."]},{"l":"Files","p":["elasticsearch_rails.rb"]},{"l":"Variables","p":["Variable","Description","Default",":elasticsearch_rails_pagy_search","customizable name of the pagy search method",":pagy_search",":elasticsearch_rails_search","customizable name of the original search method",":search"]},{"l":"Methods","p":["This method accepts the same arguments of the search method and you must use it in its place in active mode.","This constructor accepts an Elasticsearch::Model::Response::Response, plus the optional pagy variables. It automatically sets the :items, :page and :count pagy variables extracted/calculated out of it.","This method is similar to the generic pagy method, but specialized for Elasticsearch Rails (see the pagy doc).","It expects to receive YourModel.pagy_search(...) result and returns the paginated response.","This sub-method is similar to the pagy_get_vars sub-method, but it is called only by the pagy_elasticsearch_rails method. (see the pagy_get_vars doc)."]}],[{"l":"Foundation Extra","p":["This extra adds nav helpers and templates for the Foundation pagination component."]},{"l":"Synopsis","p":["See Javascript if you use pagy_foundation_nav_js or pagy_foundation_combo_nav_js."]},{"l":"Files","p":["foundation.rb","foundation_nav.html.erb(optional template)","foundation_nav.html.haml(optional template)","foundation_nav.html.slim(optional template)"]},{"l":"Methods","p":["This method is the same as the pagy_nav, but customized for Foundation.","See the pagy_nav(pagy, ...) documentation.","The foundation_nav.* templates produce the same output, and can be used as an easier (but slower) starting point to override it. See How to use templates.","See the Javascript Navs documentation.","See the Javascript Combo Navs documentation."]}],[{"l":"Gearbox Extra","p":["This extra allows your app to automatically change the number of items per page depending on the page number. Instead of generating all the pages with a fixed number of items, the app can serve pages with an increasing number of items in order to speed things up for wild-browsing and improving the user experience.","You can set this up by simply setting the :gearbox_items variable to an array of integers. For example, you would set the gearbox_items to [10, 20, 40, 80] to have page 1 with 10 items, page 2 with 20, page 3 with 40 and all the other pages with 80 items.","The content of the array is not restricted neither in length nor in direction: you can pass any arbitrary sequence of integer you like, although it makes more sense to have an increasing progression of items."]},{"l":"Interaction with other extras","p":["Even after requiring this extra, the regular fixed pagination is still supported: you have just to temporarily disable gearbox with gearbox_extra: false in the instances that need the fixed pagination.","You can also use it in presence of the items extra if you follow a simple logic. The gearbox extra automatically handles the items per page, while the items extra allows the user to explicitly request a specific number of items. That's why the items extra takes priority over the gearbox extra if both are enabled.","If you want to use the gearbox in some instances, you can temporarily set items_extra: false and the gearbox will be used instead. That is a common scenario when you use the items extra in an API controller, while you want to use the gearbox in an infinite scroll pagination in another controller."]},{"l":"Caveats","p":["This extra cannot be used with Pagy::Calendar::* objects, which are paginated by period.","The search extras ( elasticserch_rails, meilisearch and searchkick) are based on storages with built-in linear pagination, which is inconsistent with the gearbox."]},{"l":"Synopsis"},{"l":"Files","p":["gearbox.rb"]},{"l":"Variables","p":["Variable","Description","Default",":gearbox_extra","enable or disable the feature","true",":gearbox_items","array of positive integers","[15, 30, 60, 100]"]},{"l":"Methods","p":["The gearbox extra overrides the setup_items_var and the setup_pages_vars methods in the Pagy class. You don't have to use them directly."]},{"l":"Credits","p":["The idea behind this extra comes from the Geared Pagination.","The main differences are:","Pagy is not tied to ActiveRecord so it works in any environment","The pagy-cursor pagination is a pagy-extra implemented in its own gem","Pagy is many many many times faster!"]}],[{"l":"Headers Extra","p":["This extra implements the RFC-8288 compliant http response headers (and other helpers) useful for API pagination."]},{"l":"Advantages","p":["No need for an extra dependency","No need to learn yet another interface","It saves quite a lot of memory and CPU","It works with any pagy object (including Pagy::Countless) regardless the type of collection","It offers more explicit flexibility and simplicity"]},{"l":"Synopsis"},{"l":"Suggestions","p":["Instead of explicitly merging the headers before each rendering, if you use rails you can get them automatically merged (application-wide and when @pagy is available), by adding an after_action in your application controller:","If your code in different actions is similar enough, you can encapsulate the statements in a custom pagy_render method in your application controller. For example:"]},{"l":"Files","p":["headers.rb"]},{"l":"Headers","p":["This extra generates the standard Link header defined in the RFC-8288, and adds 4 customizable headers useful for pagination: Current-Page, Page-Items, Total-Pages and Total-Count headers."]},{"l":"Customize the header names","p":["If you are replacing any of the existing API-pagination gems in some already working app, you may want to customize the header names so you will not have to change the client app that consumes them. You can do so by using the :headers variable (see variables below)"]},{"l":"Countless Pagination","p":["If your requirements allow to save one count-query per rendering by using the pagy_countless constructor, the headers will not have the rel=last link, the Total-Count and the Total-Pages that are unknown with countless pagination.","Example of HTTP headers produced from a Pagy::Countless object:"]},{"l":"Variables","p":["Variable","Description","Default",":headers","Hash variable to customize/suppress the optional headers","{ page: 'Current-Page', items: 'Page-Items', count: 'Total-Count', pages: 'Total-Pages' }","As usual, depending on the scope of the customization, you can set the variables globally or for a single pagy instance.","For example, the following will change the header names and will suppress the :pages('Total-Pages') header:"]},{"l":"Methods","p":["This method relies on the response method in your controller returning a Rack::Response object.","You should use it before rendering: it simply merges the pagy_headers to the response.headers internally.","If your app doesn't implement the response object that way, you should override the pagy_headers_merge method in your controller or use the pagy_headers method directly.","This method generates a hash of RFC-8288 compliant http headers to send with the response. It is internally used by the pagy_headers_merge method, so you usually don't need to use it directly. However, if you need to edit the headers that pagy generates (for example adding extra Link headers), you can override it in your own controller.","This method generates a hash structure of the headers, useful only if you want to include the headers as metadata within your JSON. For example:","For a more complete set of metadata you should use the metadata extra."]}],[{"l":"I18n Extra","p":["The i18n extra delegates the translation of the pagy strings and localization of the calendar time labels to the i18n gem (which should obviously be installed).","A change in the global I18n.locale will automatically translate and localize all the Pagy output accordingly.","You should have some very good reasons to use the i18n gem instead of the pagy implementation, because the i18n gem is ~ 18x slower and uses ~ 10x more memory than the Pagy::I18n default implementation.","Notice: Having the i18n gem already installed and configured in your app might not count as a good reason, because, besides being faster and lighter, the Pagy::I18n is super easy to configure and doesn't require any change in the i18n of the rest of your app."]},{"l":"Synopsis","p":["In the pagy.rb initializer:"]},{"l":"Files","p":["i18n.rb"]}],[{"l":"Items Extra","p":["Allow the client to request a custom number of items per page with an optional selector UI. It is useful with APIs or user-customizable UIs.","It works also with the countless, searchkick, elasticsearch_rails and meilisearch extras."]},{"l":"Synopsis","p":["In the pagy.rb initializer:","See Javascript(only if you use the pagy_items_selector_js UI)"]},{"l":"Files","p":["items.rb"]},{"l":"Variables","p":[":items",":items_extra",":items_param",":max_items","100","As a global default:","Default","Description","enable or disable the feature","For a single instance (overriding the global default):","Notice: you can override the items that the client sends with the params by passing the :items explicitly. For example:","The :max_items is used to cap the number of items to that max. It is set to 100 by default. If you don't want to limit the max requested number of items per page, you can set it to nil.","the max items allowed to be requested. Set it to nil for no limit.","the name of the items param used in the url.","This extra uses the :items_param variable to determine the param it should get the number of :items from.","true","Variable","You can use the :items_extra variable to opt-out of the feature even when the extra is required.","You may want to customize the variables. Depending on the scope of the customization, you have a couple of options:"]},{"l":"Methods","p":["The items extra adds the pagy_items_selector_js helper to the Pagy::Frontend module."]},{"i":"pagy_items_selector_jspagy-","l":"pagy_items_selector_js(pagy, ...)","p":["This helper provides an items selector UI, which allows the user to select any arbitrary number of items per page (below the :max_items number) in a numeric input field. It looks like:","Show items per page","It returns an empty string if the :items_extra is false.","The method accepts also a few optional keyword arguments:",":pagy_id which adds the id HTML attribute to the nav tag",":item_name an already pluralized string that will be used in place of the default item/items",":i18n_key the key to lookup in a dictionary",":link_extra which add a verbatim string to the a tag (e.g. 'data-remote=true')","Notice the :i18n_key can be passed also to the constructor or be a less useful global variable (i.e. Pagy::DEFAULT[:i18n_key]","Show Products per page","(see How to customize the item name)","When the items number is changed with the selector, pagy will reload the pagination UI using the selected items per page. It will also request the right page number calculated in order to contain the first item of the previously displayed page. That way the new displayed page will roughly show the same items in the collection before the items change.","This method can take an extra id argument, which is used to build the id attribute of the nav tag."]}],[{"l":"Materialize Extra","p":["This extra adds 3 nav helpers for the Materialize CSS pagination component."]},{"l":"Synopsis","p":["See Javascript if you use pagy_materialize_nav_js or pagy_materialize_combo_nav_js."]},{"l":"Files","p":["materialize.rb"]},{"l":"Methods","p":["This extra adds 3 nav helpers to the Pagy::Frontend module. You can customize them by direct overriding in your own view helper."]},{"i":"pagy_materialize_navpagy","l":"pagy_materialize_nav(pagy)","p":["This method is the same as the pagy_nav, but customized for Materialize.","See the pagy_nav(pagy, ...) documentation."]},{"i":"pagy_materialize_nav_jspagy-","l":"pagy_materialize_nav_js(pagy, ...)","p":["See the Javascript Navs documentation."]},{"i":"pagy_materialize_combo_nav_jspagy-","l":"pagy_materialize_combo_nav_js(pagy, ...)","p":["materialize_combo_nav_js","See the Javascript Combo Navs documentation."]}],[{"l":"Meilisearch Extra","p":["Paginate Meilisearch results."]},{"l":"Setup"},{"l":"Modes","p":["This extra offers two ways to paginate Meilisearch objects:","You use the pagy_search method in place of the ms_search method.","Pagy creates its object out of your result."]},{"l":"Files","p":["meilisearch.rb"]},{"l":"Variables","p":["Variable","Description","Default",":meilisearch_pagy_search","customizable name of the pagy search method",":pagy_search",":meilisearch_search","customizable name of the original search method",":ms_search"]},{"l":"Methods","p":["This method accepts the same arguments of the ms_search method and you must use it in its place in active mode.","This constructor accepts a Meiliserch object, plus the optional pagy variables. It automatically sets the :items, :page and :count pagy variables extracted/calculated out of it.","This method is similar to the generic pagy method, but specialized for Meilisearch. (see the pagy doc)","It expects to receive YourModel.pagy_search(...) result and returns the paginated response.","This sub-method is similar to the pagy_get_vars sub-method, but it is called only by the pagy_meilisearch method. (see the pagy_get_vars doc)."]}],[{"l":"Metadata Extra","p":["If your app uses ruby as pure backend and some javascript frameworks as the frontend (e.g. Vue.js, react.js, ...), then you may want to generate the whole pagination UI directly in javascript either with your own code or using some available component.","This extra makes that easy and efficient by adding a single method to the backend that you can serve as JSON to your favorite javascript framework."]},{"l":"Synopsis","p":["In the pagy.rb initializer:","In your controller action:"]},{"l":"Files","p":["metadata.rb"]},{"l":"Variables","p":["Variable","Description","Default",":metadata","Array of names used to control the returned metadata","[ :scaffold_url, :first_url, :prev_url, :page_url, :next_url, :last_url, :count, :page, :items, :vars, :pages, :last, :from, :to, :prev, :next, :series ]","As usual, depending on the scope of the customization, you can set the :metadata variable globally or for a single pagy instance.","IMPORTANT: Don't rely on the broad default! You should explicitly set the :metadata variable with only the keys that you will actually use in the frontend, for obvious performance reasons. Besides you can also add other pagy method names not included in the default."]},{"i":"scaffold_url-key","l":":scaffold_url key","p":["This is a special url string that you can use as the scaffold to build real page urls in your frontend (instead of producing them on the backend).","It is a pagination url/path (complete with all the params) containing the __pagy_page__ placeholder in place of the page number (e.g. '/foo?page=__pagy_page__bar=baz')","You can generate all the actual links on the frontend by simply replacing the placeholder with the actual page number you want to link to.","In javascript you can do something like:","This is particularly useful when you want to build some dynamic pagination UI (e.g. similar to what the pagy_*combo_js generates), but right in your frontend app, saving backend resources with obvious performance benefits.","Notice: for simple cases you might want to use the other few :*_url metadata directly, instead of using the :scaffold_url."]},{"l":"Methods","p":["This extra adds a single method to the Pagy::Backend(available in your controllers)."]},{"i":"pagy_metadatapagy-absolute-nil","l":"pagy_metadata(pagy, absolute: nil)","p":["This method returns a hash with the keys/values defined by the :metadata variable. When true, the absolute boolean argument will cause all the :*_url metadata to be absolute instead of relative."]}],[{"l":"Navs Extra","p":["This extra adds a couple of javascript nav helpers to the Pagy::Frontend module: pagy_combo_nav_js and pagy_nav_js. These are the unstyled versions of the javascript-powered nav helpers.","Other extras (e.g. bootstrap, bulma, foundation, materialize, semantic) provide framework-styled versions of the same nav helpers, so you may not need this extra if you use one of the above framework-styled extra."]},{"l":"Synopsis","p":["See Javascript."]},{"l":"Files","p":["navs.rb"]},{"l":"Methods"},{"i":"pagy_nav_jspagy-","l":"pagy_nav_js(pagy, ...)","p":["See the Javascript Navs documentation."]},{"i":"pagy_combo_nav_jspagy-","l":"pagy_combo_nav_js(pagy, ...)","p":["See the Javascript Combo Navs documentation."]}],[{"l":"Overflow Extra","p":["This extra allows for easy handling of overflowing pages. It internally rescues from the Pagy::OverflowError offering a few different ready to use modes, quite useful for UIs and/or APIs. It works with Pagy and its subclasses, although with some little difference."]},{"l":"Synopsis","p":["In the pagy.rb initializer:"]},{"l":"Files","p":["overflow.rb"]},{"l":"Variables","p":["Variable","Description","Default",":overflow","the modes in case of overflowing page (:last_page, :empty_page or :exception)",":empty_page","As usual, depending on the scope of the customization, you have a couple of options to set the variables:"]},{"l":"Modes","p":["These are the modes accepted by the :overflow variable:"]},{"i":"empty_page","l":":empty_page","p":["This is the default mode; it will paginate the actual requested page, which - being overflowing - is empty. It is useful with APIs, where the client expects an empty set of results in order to stop requesting further pages.","Example for Pagy instance:","Example for Pagy::Countless instance:","Example for Pagy::Calendar::Month instance:"]},{"i":"last_page","l":":last_page","p":["Notice: Not available for Pagy::Countless instances since the last page is not known.","It is useful in apps with an UI, in order to avoid to redirect to the last page.","Regardless the overflowing page requested, Pagy will set the page to the last page and paginate exactly as if the last page has been requested. For example:"]},{"i":"exception","l":":exception","p":["This mode raises the Pagy::OverflowError as usual, so you can rescue from and implement your own custom mode even in presence of this extra."]},{"l":"Methods"},{"i":"overflow","l":"overflow?","p":["Use this method in order to know if the requested page is overflowing. The original requested page is available as pagy.vars[:page](useful when used with the :last_page mode, in case you want to give some feedback about the rescue to the user/client)."]},{"l":"Errors","p":["See How to handle Pagy::OverflowError exceptions"]}],[{"l":"Searchkick Extra","p":["Paginate Searchkick::Results objects."]},{"l":"Synopsis"},{"l":"Setup"},{"l":"Modes","p":["This extra offers two ways to paginate Searchkick::Results objects:","You use the pagy_search method in place of the search method.","Pagy creates its object out of your result."]},{"l":"Files","p":["searchkick.rb"]},{"l":"Variables","p":["Variable","Description","Default",":searchkick_pagy_search","customizable name of the pagy search method",":pagy_search",":searchkick_search","customizable name of the original search method",":search"]},{"l":"Methods","p":["This method accepts the same arguments of the search method and you must use it in its place in active mode.","This constructor accepts a Searchkick::Results as the first argument, plus the optional pagy variables. It automatically sets the :items, :page and :count pagy variables extracted/calculated out of it.","This method is similar to the generic pagy method, but specialized for Searchkick. (see the pagy doc)","It expects to receive YourModel.pagy_search(...) result and returns the paginated response.","This sub-method is similar to the pagy_get_vars sub-method, but it is called only by the pagy_searchkick method. (see the pagy_get_vars doc)."]}],[{"l":"Semantic UI Extra","p":["This extra adds 3 nav helpers for Semantic UI CSS pagination component."]},{"l":"Synopsis"},{"l":"Files","p":["semantic.rb"]},{"l":"Methods","p":["This extra adds 3 nav helpers to the Pagy::Frontend module. You can customize them by direct overriding in your own view helper."]},{"i":"pagy_semantic_navpagy","l":"pagy_semantic_nav(pagy)","p":["This method is the same as the pagy_nav, but customized for Semantic UI.","See the pagy_nav(pagy, ...) documentation."]},{"i":"pagy_semantic_nav_jspagy-","l":"pagy_semantic_nav_js(pagy, ...)","p":["See the Javascript Navs documentation."]},{"i":"pagy_semantic_combo_nav_jspagy-","l":"pagy_semantic_combo_nav_js(pagy, ...)","p":["See the Javascript Combo Navs documentation."]}],[{"l":"Standalone Extra","p":["This extra allows you to use pagy completely standalone, i.e. without any request object, nor Rack environment/gem, nor any defined params method, even in the irb/rails console without an app (see the Pagy::Console module).","You may need it in order to paginate a collection outside of a regular rack request or controller, like in an unconventional API module, or in the irb/rails console or for testing/playing with backend and frontend methods.","You trigger the standalone mode by setting an :url variable, which will be used directly and verbatim, instead of extracting it from the request Rack::Request object. You can also pass other params by using the :params variable as usual. That will be used to produce the final URLs in the usual way.","This extra will also create a dummy params method (if not already defined) in the module where you will include the Pagy::Backend(usually a controller)."]},{"l":"Synopsis"},{"l":"Files","p":["standalone.rb"]},{"l":"Variables","p":["Variable","Description","Default",":url","url string (can be absolute or relative)","nil","You can use the :params variable to add params to the final URLs."]},{"l":"Methods"},{"l":"Overridden pagy_url_for","p":["The standalone extra overrides the pagy_url_for method used internally. If it finds a set :url variable it assumes there is no request object, so it uses the :url variable verbatim to produce the final URL, only adding the query string, composed by merging the :page param to the :params variable. If there is no :url variable set it works like usual, i.e. it uses the rake request object to extract the base_url, path from the request, merging the params returned from the params controller method, the :params variable and the :page param to it."]},{"l":"Dummy params method","p":["This extra creates a dummy params method (if not already defined) in the module where you include the Pagy::Backend(usually a controller). The method is called by pagy to retrieve backend variables coming from the request, and expects a hash, so the dummy param method returns an empty hash avoiding an error."]}],[{"l":"Support Extra","p":["This extra adds support for features like countless or navless pagination, where you don't need the full link bar but only a simple next or prev link or no link at all (as for auto-incremental)."]},{"l":"Synopsis"},{"l":"Support for alternative pagination types and features","p":["Besides the classic pagy*_nav pagination, the pagy*_nav_js and the pagy*_combo_nav_js UI components, Pagy offers a few helpers to support a few alternative types of pagination and related features."]},{"l":"Countless","p":["You can totally avoid one query per render by using the countless extra. It has a few limitation, but still supports navbar links (see also Pagy::Countless for more details)."]},{"i":"navlessincremental","l":"Navless/incremental","p":["If you don't need the navbar you can just set the :size variable to an empty value and the page links will be skipped from the rendering. That works with Pagy and Pagy:Countless instances. All the *nav helpers will render only the prev and next links/buttons, allowing for a manual incremental pagination.","You can also use the pagy_prev_link and pagy_next_link helpers provided by this extra, mostly useful if you also use the countless extra.","Here is a basic example that uses pagy_countless(saving one query per render):"]},{"l":"Auto-incremental","p":["Automatic incremental pagination (sometimes improperly called \"infinite-scroll\" pagination) is a UI-less pagination that loads the next page at the end of the listing.","Depending on your environment, there are a few ways to implement it. You can find a simple generic example below, or some more modern specific technique shown in the following posts:","Endless Scroll / Infinite Loading with Turbo Streams & Stimulus by Stefan Wienert","Pagination with Hotwire by Jonathan Greenberg","For a plain old javascript example, we are going to use the same Incremental code above with just a couple of changes:","1. Hide the link in _next_link.html.erb by adding a style attribute:","2. Add a javascript that will click the link when the listing-bottom appears in the viewport on load/resize/scroll. It will keep the page filled with results, one page at a time:"]},{"i":"circularinfinite","l":"Circular/Infinite","p":["This type of pagination sets the next page to 1 when the current page is the last page, allowing an infinite loop through the pages.","For example, it is often used to show a few suggestions of \"similar products\" in a horizontal stripe of just a few pages of a few items each. Clicking on next will continue to loop through.","For example:","Passing a forced :count of 25 will generate 5 pages of 5 items each that will always have a next page. Regardless the actual collection count, you will show the first 25 items of the collection, looping in stripes of 5 items each.","You may want to combine it with something like:"]},{"l":"Methods"},{"i":"pagy_prev_urlpagy","l":"pagy_prev_url(pagy)","p":["Returns the url for the previous page. Useful to build minimalistic UIs that don't use nav bar links (e.g. countless extra)."]},{"i":"pagy_next_urlpagy","l":"pagy_next_url(pagy)","p":["Returns the url for the next page. Useful to build minimalistic UIs that don't use nav bar links (e.g. countless extra)."]},{"i":"pagy_prev_linkpagy-text-pagy_tpagynavprev-link_extra-","l":"pagy_prev_link(pagy, text: pagy_t('pagy.nav.prev'), link_extra: \"\")","p":["Returns the a tag for the previous page. It is the same prev link string which is part of the pagy_nav helper.","Useful to build minimalistic helpers UIs that don't use nav bar links (e.g. countless extra)."]},{"i":"pagy_next_linkpagy-text-pagy_tpagynavnext-link_extra-","l":"pagy_next_link(pagy, text: pagy_t('pagy.nav.next'), link_extra: \"\")","p":["Returns the a tag for the next page. It is the same next link string which is part of the pagy_nav helper.","Useful to build minimalistic helpers UIs that don't use nav bar links (e.g. countless extra)."]},{"i":"pagy_prev_link_tagpagy","l":"pagy_prev_link_tag(pagy)","p":["Returns the link tag for the previous page. Useful to add the link tag to the HTML head."]},{"i":"pagy_next_link_tagpagy","l":"pagy_next_link_tag(pagy)","p":["Returns the link tag for the next page. Useful to add the link tag to the HTML head."]}],[{"l":"Tailwind Extra Styles","p":["Tailwind allows to apply styles to any DOM element, so you don't actually need a special extra to produce a different output. You can use the standard unstyled pagy helpers: i.e. the default pagy_nav and the pagy_nav_js and pagy_nav_combo_js provided by the navs extra, and apply the styles to their classes."]},{"l":"Synopsis","p":["See the navs extra if you use pagy_nav_js or pagy_combo_nav_js.","Copy and customize the following basic rules to apply the styles to the pagy CSS classes:"]}],[{"l":"Trim Extra","p":["This extra removes the page=1 param from the link of the first page. You need only to require the extra in the initializer file.","This extra is needed only for very specific scenarios, for example if you need to avoid frontend cache duplicates of the first page."]},{"l":"Synopsis","p":["In the pagy.rb initializer:"]},{"l":"Files","p":["trim.rb"]},{"l":"Variables","p":["Variable","Description","Default",":trim_extra","enable or disable the feature","true","You can use the :trim_extra variable to opt-out of trimming even when the extra is required (trimming by default).","You can set the Pagy::DEFAULT[:trim_extra] default to false if you want to explicitly pass the trim_extra: true variable in order to trim the page param."]},{"l":"Methods","p":["The trim extra overrides the pagy_link_proc method in the Pagy::Frontend module."]},{"i":"pagy_link_procpagy-link_extra","l":"pagy_link_proc(pagy, link_extra='')","p":["This method overrides the pagy_link_proc using the pagy_trim to process the link to the first page."]},{"i":"pagy_trimpagy-link","l":"pagy_trim(pagy, link)","p":["Sub-method called only by the pagy_link_proc method, it removes the the :page_param param from the first page link (usually page=1).","Override this method if you are customizing the urls.","If you use a pagy_*nav_js helper you should customize also the Pagy.trim javascript function."]}],[{"l":"UIkit Extra","p":["This extra adds nav helpers and templates for the UIkit pagination component."]},{"l":"Synopsis","p":["In the pagy.rb initializer:","Render the navigation links in some view... with a fast helper:","or with a template:"]},{"l":"Files","p":["uikit.rb","uikit_nav.html.erb(optional template)","uikit_nav.html.haml(optional template)","uikit_nav.html.slim(optional template)"]},{"l":"Methods","p":["This extra adds nav helper to the Pagy::Frontend module. You can customize it by direct overriding in your own view helper."]},{"i":"pagy_uikit_navpagy","l":"pagy_uikit_nav(pagy)","p":["This method is the same as the pagy_nav, but customized for UIkit.","See the pagy_nav(pagy, ...) documentation.","The uikit_nav.* templates produce the same output, and can be used as an easier (but slower) starting point to override it. See How to use templates."]},{"i":"pagy_uikit_nav_jspagy-","l":"pagy_uikit_nav_js(pagy, ...)","p":["See the Javascript Navs documentation"]},{"i":"pagy_uikit_combo_nav_jspagy-","l":"pagy_uikit_combo_nav_js(pagy, ...)","p":["See the Javascript Combo Navs documentation.","Here is an example:","uikit_combo_nav_js"]}],[{"l":"TO DO","p":["[] Refactor the description of Pagy::Backend","[] Refactor the description of Pagy::I18n(translation + localization)","[] Refactor of index.md: Rewrite the content... eventually moving part out or the README.","[] Refactoring of How To: Try the panels or split in sup pages?","[] Reorganize ALL the content with retype tabs, panels, columns, alert, warnings, notes etc."]}],[{"l":"CHANGELOG"},{"l":"Breaking Changes","p":["If you upgrade from version 5.0.0 see the following:","Breaking changes in version 5.0.0","Breaking changes in version 4.0.0","Breaking changes in version 3.0.0","Breaking changes in version 2.0.0","Breaking changes in version 1.0.0"]},{"l":"Deprecations","p":["Still supported in version 5.x but not supported from 6.0 on:","The pagy_massage_params method: use the :params variable set to a lambda Proc that does the same (but per instance). See How to customize the params.","The activesupport core dependency: it will become an optional requirement if you use the calendar: add gem 'activesuport' to your Gemfile if your app doesn't use rails.","The plain Time objects in the :period variable: use only ActiveSupport::TimeWithZone objects.","The :offset variable used by the Pagy::Calendar::Week: set the Date.beginning_of_week variable to the symbol of the first day of the week (e.g. Date.beginning_of_week = :sunday). Notice the default is :monday consistently with the ISO-8601 standard (and Rails).","The Pagy::DEFAULT[:elasticsearch_rails_search_method]: use Pagy::DEFAULT[:elasticsearch_rails_pagy_search] instead.","The Pagy::DEFAULT[:searchkick_search_method]: use Pagy::DEFAULT[:searchkick_pagy_search] instead.","The Pagy::DEFAULT[:meilisearch_search_method]: use Pagy::DEFAULT[:meilisearch_pagy_search] instead."]},{"i":"version-5101","l":"Version 5.10.1","p":["Changed default for :meilisearch_search method to always defined :ms_search method"]},{"i":"version-5100","l":"Version 5.10.0","p":["Adjusted Psych::VERSION condition to avoid deprecations","Improvement of search extras: (closes #367) (closes #369)","Added DEFAULT[:*_ search] variables used to call the original :search method","Deprecated and renamed DEFAULT[:_search_method] to DEFAULT[:_ pagy_search]","Updated config, docs and CHANGELOG deprecations","Fix for wrong calculation of :page in Pagy.new_from_meilisearch (closes #368)","Faster assignment of javascript path","Simplified webpack config, added rollup config and normalized doc","Better javascript doc (closes #365)","Added specific webpack javascript configuration info; a few minor doc adjustments","Added specific webpack javascript configuration info","Update javascript.md (#362)"]},{"i":"version-593","l":"Version 5.9.3","p":["Fix for too generalized html_escape in pagy_url_for. (closes #363)","Docs updates"]},{"i":"version-592","l":"Version 5.9.2","p":["Added info about using pagy-module.js with importmap","Bundle and npm update","Fix for non escaped query strings in links","Small improvements in src files","Added legacy methods to use the javascript files","Added missing require in docs","Updated docs with the proper way to use pagy with esbuild","Docs improvements","Improved the javascript files docs and moved into the lib/javascripts/README.md file"]},{"i":"version-591","l":"Version 5.9.1","p":["Updated build.sh to set window.Pagy in pagy-dev.js","Update pagy.md (#360)","Minor - fix syntax highlighting (#361)","Updated info about the current way to use pagy.js with jsbuilder-rails/esbundle"]},{"i":"version-590","l":"Version 5.9.0","p":["Npm and bundle update","Fix and refactoring of pagy calendar calculation of local time (closes #358):","The Pagy::Calendar::* classes require ActiveSupport (temporarily added activesupport dependency that will e replaced in 6.0)","The :period items can be Time or TimeWithZone objects (which work across DST ranges)","Deprecated use of :offset to set the first weekday, in favour of Date.beginning_of_week(default to :monday)","Added DST specific tests","Fix for calculation of label quarter","Updated docs and tests","Fix for wrong offset in gearbox extra (closes #356)","Reduced the public interface of pagy.js and relative files to just version and init()","Add Ruby 3.1 to CI (#354)"]},{"i":"version-581","l":"Version 5.8.1","p":["Shorter warning messages and minified pagy.js","Fix for wrong decoding of non latin charsets"]},{"i":"version-580","l":"Version 5.8.0","p":["The JSON in data-pagy attributes is base64 encoded: it is smaller than HTML escaped and it avoids crawlers to follow look-alike links","Removed redundant PagyJSON type"]},{"i":"version-576","l":"Version 5.7.6","p":["Updated Gemfile.lock and package-lock.json","Broader browserslist and better doc for javascript","Updated build.sh","Improvement of pagy.ts:","Moved warn() out of init()","More inclusive try block","Simplified rjsObserver function","Replaced getOwnPropertyNames with keys","Fix for missing entry in CHANGELOG.md"]},{"i":"version-575","l":"Version 5.7.5","p":["Fix for unwanted offset in source map data"]},{"i":"version-574","l":"Version 5.7.4","p":["Added parcel-plugin-nuke-dist","Renamed pagy.mjs -> pagy-module.js; added TypeScript declaration file and build.sh"]},{"i":"version-573","l":"Version 5.7.3","p":["npm update","Simper pagy-dev.js; added pagy.mjs module","Updated .eslintrc.json and package.json files"]},{"i":"version-572","l":"Version 5.7.2","p":["Simplified keyword naming","Better compilation and development support for pagy.js. Replaced babel with parcel."]},{"i":"version-571","l":"Version 5.7.1","p":["Simpler syntax for nav js helpers","Added input e2e test file","Simpler abstraction of input based js helpers"]},{"i":"version-570","l":"Version 5.7.0","p":["Bundle and npm update","TypeScript/Javascript improvements:","More efficient handling of responsive * nav_js helpers","Replaced window resize event listener with ResizeObserver","More robust input based js helpers (catching possible invalid user input)","Improved typing, function naming","Added error catching"]},{"i":"version-5610","l":"Version 5.6.10","p":["Improvement and fixes for client-side related structure","Replaced e2e/cy script with a couple of npm scripts backed by the start-server-and-test","Added trim test for items_selector_js; cleanup of e2e dir","Normalized json files indentation","Added trim to e2e tests","Reorganized cypress tests: faster and more accurate","Simpler pagy.ts"]},{"i":"version-569","l":"Version 5.6.9","p":["Better doc for e2e related commands in docker/README.md","Updated package-lock.json and improved ci-cache.sh","Used better syntax and code style in typescript files","Updated copyright year","Refactoring of typescript related files and dirs:","Moved e2e dir in the project root","Added typescript linting plugins and configuration","Converted all the e2e test to typescript","Updated Docker, VSC and .idea configurations"]},{"i":"version-568","l":"Version 5.6.8","p":["Reorganized TypeScript/JavaScript with npm workspaces and better script naming","Fix typo in gemspec","Better typescript configuration with source maps and declrations"]},{"i":"version-567","l":"Version 5.6.7","p":["GitHub Actions: added quotes to version ruby 3.0","Added typescript + babel environment for better pagy.js","Updated e2e environment","Updated gemfiles","Fix for support doc snippets and other typos","Minor update of gemfiles and docs","Added more gemspec metadata entries (closes #351)"]},{"i":"version-566","l":"Version 5.6.6","p":["Docs improvements","Added **_ to series and sequels","Updated rematch and gemfiles","Updated release-gem.yml workflow"]},{"i":"version-565","l":"Version 5.6.5","p":["Improved a few code comments; added post link in README","Full name for translate, aliased as t","Added check for no calendar units in pagy_calendar configuration","Updated gemfiles","Small docs layout adjustment"]},{"i":"version-564","l":"Version 5.6.4","p":["Updated RM run configurations","Fix for missing innerHTML reset, unintentionally committed during a cleanup (closes #350)","Updated gemfiles, docs and comments"]},{"i":"version-563","l":"Version 5.6.3","p":["Improved readability and efficiency of calendar files","Fix for English spelling in local variable name"]},{"i":"version-562","l":"Version 5.6.2","p":["Updated pagy.manifest for Tamil locale","Add Tamil (ta) translation (#349)","Internal changes in calendar files:","Simpler calculations for month mixin","Normalized naming of non-api methods","Better comments","Pagy::I18n: small performance improvement","Docs reorganization","Update paths_ignore for skip CI and docs"]},{"i":"version-561","l":"Version 5.6.1","p":["Updated cypress and bundler","Improved efficiency of unit labelling and support for custom calendar unit sub formats","Added missing initializer default for calendar quarter and missing doc for custom units"]},{"i":"version-560","l":"Version 5.6.0","p":["Updated gemfiles","Updated docs","Added calendar quarter tests","Internal calendar refactoring to allow custom units; added quarter unit"]},{"i":"version-551","l":"Version 5.5.1","p":["Docs updates","upgrade bootstrap template navs: call pagy_link_proc with link_extra key (#348)","Renamed internal #time_for -> #start_for","Docs fixes and improvements"]},{"i":"version-550","l":"Version 5.5.0","p":[":*_format-> :format",":minmax-> :period",":skip-> :active",":time_order-> :order",":week_offset-> :offset","#pagy_calendar_filtered-> #pagy_calendar_filter","#pagy_calendar_minmax-> #pagy_calendar_period","#utc_from-> #from(use from.utc if you need it)","#utc_to-> #to(use to.utc if you need it)","Added alternative way to delegate the localization to i18n without the i18n extra","Calendar API: FINAL breaking changes(stable from now on):","Documentation fixes and improvements","Fix for wrong reordering in :desc order","Inverted the logic for the :skip key in the #pagy_calendar conf, now renamed:","Moved calendar defaults from Pagy::DEFAULT to class-specific Pagy::Calendar::*::DEFAULT","Refactoring of calendar classes and variables:","Removed the warning for the API changes: the API is stable after these changes","Renamed methods:","Renamed variables:","Returning local time instead of UTC time for the utc accessors, now renamed:","Updated cypress and related packages","Updated pagy_calendar_app.ru"]},{"i":"version-540","l":"Version 5.4.0","p":["Calendar API breaking changes for refactoring of Pagy::Calendar and calendar extra:","Added complete compatibility with all the backend extras","Simpler usage with automatic handling of pagy objects","Less variables and simpler requirements for the methods to implement","Updated gemfiles","The localize method overridden by the i18n extra must receive a format","Series and sequels use keyword arguments and pagy_* nav methods accepts a size keyword argument","Docs improvements","Removed unnecessary empty section in calendar docs","Fixes for typos and misalignment"]},{"i":"version-531","l":"Version 5.3.1","p":["Added screenshot to the calendar extra (closes #346)","Added bump.sh script to bump the version in multiple files; check for consistency and optionally commit the changes","Minor fixes","Changelog improvements","Reversed CHANGELOG (closes #345)","Calendar I18n small internal renaming and docs improvements"]},{"i":"version-530","l":"Version 5.3.0","p":["Implemented localization of time labels through the i18n extra delegation","Renamed internal module and files of SharedExtra to FrontendHelpers","Added support for *nav_js to Calendar","Simplified page labelling, moved into the pagy classes and removed frontend methods","Deprecated pagy_massage_params: use the :params variable set to a Proc that does the same, but per instance","Added apps README","Completed overflow fix for pagy Countless"]},{"i":"version-523","l":"Version 5.2.3","p":["Fix for overflow :empty_page in regular Pagy instances, not returning an empty page","docs: add tutorial, simplify header (#343)","Refactoring of rails_inline_input.rb (include and close #342)"]},{"i":"version-522","l":"Version 5.2.2","p":["Fix for missing defined?(Calendar) checks; small simplification in headers extra","Calendar docs improvements and fixes"]},{"i":"version-521","l":"Version 5.2.1","p":["Reorganization of mock collection classes; enabled rubocop layout in tests","Small refactoring of the overview extra","A few improvements for the Calendar pagination; added the current_page_label method"]},{"i":"version-520","l":"Version 5.2.0","p":["Small changes in code; updated gemfiles, tests and docs","Implemented calendar extra to paginate a Time periods by unit (year, month, week or day)","Added pagy_labeler frontend method overridable for changing the link text from a simple page number to any arbitrary string","Enabled rubocop Style/Documentation cop","Updated npm modules and gemfiles","Docker better mounts","Used gem-generic release-gem action"]},{"i":"version-513","l":"Version 5.1.3","p":["Added single action standalone rails_inline_output.rb","Small improvements in code and docs","Fix for rails problem with internal params in pagy URL (closes #341)","Documentation improvements","A few details tag in the README should be opened by default"]},{"i":"version-512","l":"Version 5.1.2","p":["Refactoring of pagy_url_for and relative test:","Fix for ignoring the items_extra variable","Replaced request.GET with request.params to enable POST pagination","Refactoring of Mock test classes for better handling of params"]},{"i":"version-511","l":"Version 5.1.1","p":["This reverts commit 1d77e672d5b7813108b40c13ca93fdec045f4c03. Generating the URL by using the application params method breakes rails apps because it requires manual changes in the apps."]},{"i":"version-510","l":"Version 5.1.0","p":["Fix and refactoring of pagy_url_for and relative test:","Fix for ignoring the params not coming from the request","Fix for ignoring the items_extra variable","Refactoring of Mock test classes for better handling of params","Improved code comments, formatting and docs fixes","Countless extra: simplified code, internal renaming of locals and docs update"]},{"i":"version-501","l":"Version 5.0.1","p":["Updated docs and issue templates","Added cypress-dark theme to e2e test","Refactoring of coverage to include 100% of line and condition branches covered","Simplification of metadata extra","Refactoring of exceptions","Added CHANGELOG_LEGACY"]},{"i":"version-500","l":"Version 5.0.0"},{"i":"breaking-changes---1-code-update","l":"Breaking changes - 1. Code update","p":["Pagy 4 dropped the compatibility for old ruby versions 2.5 and started to refactor the code using more modern syntax and paradigms and better performance. It deprecated the legacy ones, printing deprecation warnings and upgrading instruction in the log, but still supporting its legacy API. Pagy 5.0.0 cleans up and removes all that transitional support code.","The changes for upgrading your app cannot be fixed with simple search and replace, but fear not! Fixing them should just take a few minutes with the following steps:","Upgrade to the latest version of pagy 4","Run your tests or app","Check the log for any deprecations message starting with '[PAGY WARNING]'","Update your code as indicated by the messages","Ensure that the log is now free from warnings","Upgrade to pagy 5","FYI: Here is the list of the deprecations that are not supported anymore:"]},{"l":"Removed support for deprecated variables","p":["Pagy::VARS[:anchor] is now Pagy::DEFAULT[:fragment]"]},{"l":"Removed support for deprecated arguments order","p":["The argument order in pagy_url_for(page, pagy) is now inverted: pagy_url_for(pagy, page)"]},{"l":"Removed support for deprecated positional arguments","p":["The following optional positional arguments are passed with keywords arguments in all the pagy helpers:","The id html attribute string with the pagy_id keyword","The url|absolute flag with the absolute keyword","The item_name string with the item_name keyword","The extra|link_extra string with the link_extra keyword","The text string with the text keyword"]},{"i":"breaking-changes---2-simple-search-and-replace","l":"Breaking changes - 2. Simple search and replace","p":["There are a few renaming that have not been deprecated in previous versions because they are extremely easy to fix with simple search and replace (while implementing deprecations would have been detrimental to performance and complex for no reason)"]},{"l":"Consistency renaming","p":["A few elements have been renamed: you code may or may not contain them. Just search and replace the following strings:","Rename Pagy::VARS to Pagy::DEFAULT","Rename enable_items_extra to items_extra","Rename enable_trim_extra to trim_extra","Rename Pagy::Helpers to Pagy::UrlHelpers","Rename pagy_get_params to pagy_massage_params"]},{"l":"Items accessor","p":["The items accessor does not adjust for the actual items in the last page anymore. This should not affect normal usage, so you can ignore this change unless you build something on that assumption.","If your code is relying on the actual number of items in the page, then just replace @pagy.items with @pagy.in wherever you meant that.","FYI: The @pagy.items is now always equal to @pagy.vars[:items](i.e. the requested items), while the @pagy.in returns the actual items in the page (which could be less than the items when the page is the last page)"]},{"l":"Changes","p":["Removed support for deprecations","Refactoring of Pagy and Pagy::Countless classes, I18n, and url helpers","Refactoring of the docker environment, addition of ready to use VSCode setup","Changed general module structure (use of prepend instead of re-opening modules)","Added gearbox extra for geared pagination","Added configuration files for a full working VSCode devcontainer environment","Added Run Configurations for RubyMine","Improved the usage of e2e tests","Updated doc, gemfiles and github workflow","Other minor fixes and improvements in code and doc"]}],[{"l":"CHANGELOG LEGACY"},{"i":"version-4110","l":"Version 4.11.0"},{"l":"Changes","p":["added countless_minimal feature","added missing deprecation to countless class","doc improvements"]},{"l":"Commits","p":["5103ee9: added countless_minimal feature","ed6bc0b: added missing deprecation to countless class","bedb2d6: Fix - link directly to docs [ci-skip] (#328)","74aa300: Remove minor extra parenthesis in trim docs [ci-skip] (#326)","f8b96eb: docs - add links directly to docs page [ci-skip] (#324)"]},{"i":"version-4102","l":"Version 4.10.2"},{"i":"changes-1","l":"Changes","p":["improve the customization of url when using the trim extra","better tailwind rules","doc fixes and improvements"]},{"i":"commits-1","l":"Commits","p":["9e7fd48: improve the customization of url when using the trim extra (closes #325)","0d48b5f: better handling of extra docker-compose run files","f5ed8f6: added note about the possible workaround for bundler/inline bug","2715660: doc fixes","7187101: Javascript doc improvements","24b7e78: release workflow refactoring","20d1d8e: chore: add github action - publish & tag versions (#322)","922fd7f: better tailwind rules","28983e6: added doc for using Searchkick.pagy_search (closes #319)"]},{"i":"version-4101","l":"Version 4.10.1"},{"i":"changes-2","l":"Changes","p":["fixes for meilisearch extra"]},{"i":"commits-2","l":"Commits","p":["ec748c2: Fixes for Meilisearch extra (#318)"]},{"i":"version-4100","l":"Version 4.10.0"},{"i":"changes-3","l":"Changes","p":["added arabic locale"]},{"i":"commits-3","l":"Commits","p":["9bc548e: added missing keys for Arabic (#317) (closes #295)","1b95674: Add arabic locale, pluralization and tests; alpha ordered tests"]},{"i":"version-490","l":"Version 4.9.0"},{"i":"changes-4","l":"Changes","p":["added meilisearch extra","docs fixes"]},{"i":"commits-4","l":"Commits","p":["572ed78: updated pagy-ci.yml","8fe1d19: Fix documents for searchkick (#315)","744717f: Meilisearch extra (#316)","fb65260: updated issue templates","1c3d283: Added Pagy::Console links to README"]},{"i":"version-481","l":"Version 4.8.1"},{"i":"changes-5","l":"Changes","p":["fix for deprecation and test improvements"]},{"i":"commits-5","l":"Commits","p":["0f1a7f2: improved deprecation_tests (see #311)","7e9c9cd: fix(pagy): deprecated_var is a class method (#311)"]},{"i":"version-480","l":"Version 4.8.0"},{"i":"changes-6","l":"Changes","p":["Lowered minimal ruby version requirement to 2.5+","Simpler tests using the rematch gem","Docker environment improvements"]},{"i":"commits-6","l":"Commits","p":["001f22f: fix for different handling of module prepend in ruby <3","04755aa: updated puma","14b3a0c: lowered the minimum ruby version requirement to 2.5","4ec03f1: added HTML validation for all the helpers and styles","527a14f: Gemfile update","675f587: Gemfile: added gemspec and updated rematch","842de05: better tests and stricter rubocop","87b2f62: refactoring e2e: replaced snapshot plugin; updated to cypress 7.3.0","8a2cf76: replaced syntax not available in ruby 2.5","8bda6a9: added rematch gem and reset rematch stores","8c76943: updated Gemfile.lock","934f602: added comment in doc example about the inverted order of arguments in previous versions","acd59f5: moved command out of default docker-compose to its own file in order to avoid error before first bundle install","b0a6603: Updated to rematch 1.0 and copyright year","b5b500a: Merge branch 'backport-to-2.5' into dev","d6d71a5: fix for frozen error handled differently on ruby <3","d82e95c: Gemfile updated and used for CI","f62fa88: added e2e tests to ci"]},{"i":"version-471","l":"Version 4.7.1"},{"i":"changes-7","l":"Changes","p":["Fixed a couple of HTML validity issues with uikit and materialize combo_nav_js","Improved rematch testing","Updated the documentation"]},{"i":"commits-7","l":"Commits","p":["8cb4193: fixed and simplified uikit combo nav","f762aca: used chip class for materialized combo nav","064a2b5: rematched tests","2a45321: expanded the combo nav label to the whole text","37c65a8: fixed and simplified materialize combo nav","789773b: removed faulty PAGY_REMATCH variable function; added rematch_all rake task","eb2df6d: updated docs [skip ci]"]},{"i":"version-470","l":"Version 4.7.0"},{"i":"changes-8","l":"Changes","p":["Refactoring of pagy-json tags into data attributes","Added the rematch testing system to ease maintenance of tests","Added Ukrainian locale","updated Gemfile and doc"]},{"i":"commits-8","l":"Commits","p":["887c783: better doc for E2E testing","738fd93: updated manifest","0110e3a: Ukrainian locale (#310)","9265cd2: extended must_rematch to other tests","d217965: refactoring of pagy_json_tag to pagy_json_attr: from script tag to data attribute","57e6f91: added rematch test to ease maintenance of tests","94561a0: updated puma"]},{"i":"version-460","l":"Version 4.6.0"},{"i":"changes-9","l":"Changes","p":["Added labels to all input tags for improved usability and compliance","Fixed a few HTML typos and redundant or illegal attributes","Improved Sinatra app usable for experiment with pagy and providing support for ode issues","Documentation improvements","Added E2E testing for all pagy helpers","GitHub management improvements"]},{"i":"commits-9","l":"Commits","p":["0fe2e49: added helpers and navbar tests for all the styles; updated docker readme","26b57a8: Added fix for Cypress bug affecting the snapshots plugin, improved cypress dockerfiles; added cypress studio and basic try","7693b3e: cypress: updated images; better open-cypress.yml with persistent configuration settings; added snapshots plugin","94e262f: added label tag to the pagy inputs","f5e3482: removed redundant role=\"navigation\" attribute from nav tags; removed illegal aria-label=\"pager\" from semantic div","0467d32: fixes for html typos in semantic, foundation and materialize helpers","3f2c9f0: doc small fixes","bff8c5f: refactoring of sinatra apps; added quick-start doc section","b0baaa5: simplified standalone_app.ru","5442b34: fix broken link [ci skip]","17b1faf: improved issue template [ci skip]","f933cd7: Added issue template and standalone_app to use as a scaffold for reproducing issues [ci skip]","c8e41e3: added superails screencast; resized thumbnails [skip ci]","6116c32: added a few references in the how_to doc [skip ci]"]},{"i":"version-451","l":"Version 4.5.1"},{"i":"changes-10","l":"Changes","p":["Better Pagy::Console usability"]},{"i":"commits-10","l":"Commits","p":["4ee8bbf: pagy console extracted in its own module"]},{"i":"version-450","l":"Version 4.5.0"},{"i":"changes-11","l":"Changes","p":["Added E2E infrastructure for development and testing","Refactoring of Javascript and docker environment"]},{"i":"commits-11","l":"Commits","p":["1b7b014: Add: clarity, further instructions to run pagy tests [skip ci] (#304)","7c723ba: added basic structure to run cypress tests and open the cypress IDE"]},{"i":"version-440","l":"Version 4.4.0"},{"i":"changes-12","l":"Changes","p":["Passing positional arguments (besides @pagy) to all the helpers is deprecated and it will be supported only until pagy 5.0","All the helpers accept more optional keyword arguments, for example:","pagy*_nav(@pagy, pagy_id: 'my-id', link-extra: '...')","pagy*_nav_js(@pagy, pagy_id: 'my-id', link-extra: '...', steps: {...})","pagy*_combo_nav_js(@pagy, pagy_id: 'my-id', link-extra: '...')","pagy_items_selector_js(pagy, pagy_id: 'my-id', item_name: '...', i18n_key: '...', link_extra: '...')","pagy_info(@pagy, pagy_id: 'my-id', item_name: '...', i18n_key: '...')","pagy_prev_link(@pagy, text: '...', link_extra: '...')","pagy_next_link(@pagy, text: '...', link_extra: '...')","pagy_link_proc(@pagy, link_extra: '...')","pagy_url_for(pagy, page, absolute: nil)(notice the inverted page/pagy order with the legacy pagy_url_for(page, pagy, url=nil))","deprecated :anchor variable in favor of :fragment","Refactoring of rake tasks, tests, items extra, javascript helpers","Gems and documentation updates and fixes","Added standalone extra"]},{"i":"commits-12","l":"Commits","p":["01f8f1c: refactoring of Rakefile now split in different task files","034afe8: config/pagy.rb: moved pagy variables block at the beginning","1538f24: updated tests with keyword arguments","2382482: added link_extra keyword arg to pagy_items_selector_js","2acbac6: added \"pagy-njs\" class to all pagy*_ nav_js helpers","2faca63: small improvement to pagy_url_for","393d216: updated gems","3f13014: added resource post and relative link [skip ci]","627a0dc: also pagy_link_proc uses keyword arguments","64347f8: changed the argument order from pagy_url_for(page, pagy) > pagy_url_for(pagy, page) for consistency with all the other helpers; deprecation warning and support for pagy < 5","670f5a5: updated documentation","6a8fbb4: added \"pagy-info\" and \"pagy-items-selector-js\" classes to helpers output","6ce0c1d: helpers: deprecated positional id argument and added keyword arguments","76096e7: simplified the items extra, and added its features to the array and arel extras","7927f37: added manifest:check to CI for master and dev and to the default rake task","86fb20e: fixed pagy_semantic_nav hellips","8ff2665: completed args conversion also for pagy_url_for and pagy_metadata","9611eac: updated CHANGELOG","9fd7930: removed pagy_id method and added id arg to the pagy*_ nav helpers","aa83126: added standalone extra","ad350e1: pagy_info wrapped into span tag, and added pagy_id keyword arg","b69a2f2: Merge branch 'dev'","bd0bb6c: renamed :trim variable to the more explicit :enable_trim_extra; removed redundant tests","d2891fb: refactoring and additions of tests","d791a04: deprecated :anchor variable in favor of :fragment","d977767: better links in extras.md","e22c9c3: Merge branch 'args-refactoring' into dev","e91e4da: [skip ci] update javascript documentation (#305)","ec74e4f: removed the mandatory id arg passed to pagy_json_tag; updated tests; simplified pagy.js using previousSibling"]},{"i":"version-430","l":"Version 4.3.0"},{"i":"changes-13","l":"Changes","p":["Improved efficiency of #series algorithm","Added new features to the trim extra","Added rubocop compliance (additional rubocop-packaging plugin)","Many test tasks improvements","CI transition from Travis to Github Action"]},{"i":"commits-13","l":"Commits","p":["0424b71: docs and comment additions/fixes [skip ci]","0e3a09d: added :ide_development bundle group; small README changes","1051e6d: trim feature: added :trim variable to opt-out to trim even with the trim extra loaded, or invert the logic to out-in by setting Pagy::VARS[:trim] to false","3cc464b: added coverage_summary at the end of the default task; added possibility of creating a coverage report","3ea2d27: codecov gets already required in travis on ruby 3.0 (but not locally)","487eb70: small code normalization","5e6f749: simpler test tasks","60be542: fix missing codecov formatter/circular reference problem","80cef45: updated Gemfile","8c4ccfc: rubocop: added rubocop-packaging plugin; expanded inclusion of files","9fb1195: more verbose condition","b6115e7: Added explicit pagy.manifest to comply with rubocop-packaging (see also #297)","e17d294: improved series algorithm efficiency (now up to ~ 5x faster and ~ 2.3x lighter than the previous one)","e5ee4e7: CI: Remove Bundler 1.x workaround (#296)The \"github\" source now has that form, already.","ece4daa: minor code restyling","ef1980e: refactoring of CI from Travis to Github Actions","fe565eb: removed RUN_RUBOCOP"]},{"i":"version-420","l":"Version 4.2.0"},{"i":"changes-14","l":"Changes","p":["Fix for Pagy::Frontend::I18n conflicting with rthe I18n gem namespace after inclusion and safer renaming of other modules","Fix the simplecov setup reporting less coverage than what's actually covered","Updated Tailwind styles","Included the test dir in the coverage check, refactoring and additions of tests","Big code restyling following ruby 3.0 syntax and cops; tried to make the code simpler, more readable and verbose with almost negligible performance loss."]},{"i":"commits-14","l":"Commits","p":["2bbf204: added Mike Rogers' screencast [ci-skip]","3a9e70f: Fix extra i18n namespacing (#293)* Add a test that looks at i18n working in Modules included (fixes #290)","3eef450: Simpler test for I18n namespace conflict","4d20d34: Update Tailwind styles (#285)","5e6ecf1: refactoring of Rakefile","618d226: docker README fix [ci-skip]","8cd25d2: renamed docker > pagy-on-docker","9a14400: Small README addition [ci-skip]","9b40cdd: Update frontend.md (#284) [ci-skip]","9efb908: removed ENABLE_OJ from tests and travis config","a62ae94: Updated README","a8060b1: fixed doc typos","aac54aa: Renaming prepended modules with more specific and safe naming convention (see Issue #290 PR #293)","ac988fd: docs fixes","aea25a1: code-restyling: test","b24b86d: Added note for brakeman false positive warnings (closes #243) [ci-skip]","b2aaa01: README: fix typo (#289) [ci-skip]","b2dc35a: code-restyling: locales, config","b638764: code-restyling: root files and Pagy Core","c178c6f: docker README fixes [ci-skip]","cb67353: code-restyling: extras","dede255: removed RUN_SIMPLECOV option","df3c8d6: small syntax normalization","f0e0d41: removed require for minitest/reporters","fc614bd: fix/refactoring for simplecov setup reporting less coverage than what's actually covered"]},{"i":"version-410","l":"Version 4.1.0"},{"i":"changes-15","l":"Changes","p":["added Bosnian, Croatian and Serbian locales"]},{"i":"commits-15","l":"Commits","p":["8da0e06: Add Serbian locale (#283)","dcfc659: Add locales for Bosnian and Croatian language (#281)"]},{"i":"version-400","l":"Version 4.0.0"},{"l":"Breaking Changes","p":["renamed Pagy::Search as Pagy::Searchkick or Pagy::ElasticsearchRails"]},{"i":"changes-16","l":"Changes","p":["Dropped support for all jruby versions and ruby version <3.0 (use pagy 3.x instead)","Dropped deprecation for old/renamed locales","Fixed error in searchkick extra with ruby 3","Various refactorings taking advantage of the dropped support for old ruby versions"]},{"i":"commits-16","l":"Commits","p":["05d9e92: used ruby 3.0 syntax","24ab5c6: simpler travis setup","296f060: added pagy_search name customization to elasticsearch extras","2a343ce: added README note about versions","33c467a: removed MARK constant","3eac56b: removed unused Hash additional methods","4676788: updated docker environment for pagy 4","467b985: added docker development environment","49040fb: removed EMPTY constant used for legacy compatibility with frozen_string_literal","4a85efe: updated gemfile and gemspec for pagy 4","4d48d33: refactoring of pagy_json_tag","5d53043: emptied CHANGELOG and dropped LEGACY_CHANGELOG","66e29d1: fixes for the docker README","6751412: added a few env variables in order to control the verbosity of tests; added test for negative page number","6966fe3: refactoring of elasticsearch extras","745e68f: minor fixes for docker","8ec7893: refactoring of trim extra using module prepend instead alias method chaining","98a5254: refactoring of the elasticsearch_rails extra matching the actual params of the search method","a70881a: updated version to 4.0.0","aecb565: normalization of i18n naming","b3f78b8: refactoring of items extra using module prepend instead alias method chaining and module_eval; refactoring of tests (countless was masking failures of elasticsearch extras)","b826f61: updated rubocop and fixed offending lines","ba100dc: updated documentation","c361293: Gemfile: uncommented performance group","ce1d7ec: removed legacy I18n compatibility","dadd2f1: ruby 3.0 syntax","df8607e: refactoring of overflow extra using module prepend instead alias method chaining","f075337: removed deprecated locales","f1d89a5: refactoring of I18n extra using module prepend instead alias method chaining","fcaab88: updated gemfile and gemspec"]},{"i":"version-3110","l":"Version 3.11.0"},{"i":"changes-17","l":"Changes","p":["added Swahili localization"]},{"i":"commits-17","l":"Commits","p":["fbc322f: Add Swahili (sw) to pagy (#276)","ebbac6b: Fix: broken links (#272) [ci-skip]","2178436: restored file removed by mistake"]},{"i":"version-3100","l":"Version 3.10.0"},{"i":"changes-18","l":"Changes","p":["added Czeck localization"]},{"i":"commits-18","l":"Commits","p":["316183f: minor adjustments to p11n.rb; removed local file","2e7fa1b: Update with 'cs' (#269)added lambda for 'west_slavic' and 'hash for 'cs' language","70760c6: Czech localization (#268)"]},{"i":"version-390","l":"Version 3.9.0"},{"i":"changes-19","l":"Changes","p":["added link tags helpers to support extra"]},{"i":"commits-19","l":"Commits","p":["a66491b: added link tags helpers to support extra","2ef08a9: @pagy_locale explicitly initialized to avoid warning","261c6a1: reorganized gemfiles for travis, removed jruby 9.2 tests and added CAVEATS and removed redundant ||=nil","619d7d1: updated gems","fc861d8: added .gitattributes to fix github linguist [ci-skip]","287b94f: added Raul Palacio screencast link to README","52c65a3: added \"Contributions\" section in the README","f09a80a: Add tutorial link to readme (#259)","86bf3dc: Fix: typo [ci-skip] (#257)","bd3bcc7: Update copyright notice to 2020 (#256) [ci-skip]","01e4a14: [ci-skip] Add note re: html safe helpers (#254)Fixes discussion noted in: #6","1d812be: doc improvements [ci-skip]"]},{"i":"version-383","l":"Version 3.8.3"},{"i":"changes-20","l":"Changes","p":["Portuguese translation","Fixes and documentation improvements"]},{"i":"commits-20","l":"Commits","p":["f64a1d6: added pagy reference to jetbrains link","8a4596f: Add translation for Portuguese (#250) [ci-skip]","515de9b: Adds parentheses (#249) [ci-skip]","734f30c: added basic sinatra app","c7aa44d: updated gems","62bd4ac: added tailwind extra styles","c2e8eef: added \"Customizing CSS styles\" how to section","614a3e1: fix for extra \"-js\" in \"pagy-combo-nav-js\"","8673ca4: a couple of how_to additions"]},{"i":"version-382","l":"Version 3.8.2"},{"i":"changes-21","l":"Changes","p":["Fixes, improvements and gems updates"]},{"i":"commits-21","l":"Commits","p":["a1a7962: gems update","0a70110: item_name can be overridden by passing an already pluralized string to pagy_info","28913d6: Use proper attributes for \"previous\" links (#244)"]},{"i":"version-381","l":"Version 3.8.1"},{"i":"changes-22","l":"Changes","p":["Various fixes ad gems update"]},{"i":"commits-22","l":"Commits","p":["1aa1fa7: gems update","289d38a: added conditional definition of pagy_t_with_i18n to avoid ruby 2.7 \"last argument as keyword parameters\" deprecation warning (closes #241)","d571719: added raw_response method check for pagy_elasticsearch_rails (#234)","7a09bb9: fix typo in documentation","d7a9f7a: Fixes boundary character escaping in regex in js trim function (#239)","3561885: gems update"]},{"i":"version-380","l":"Version 3.8.0"},{"i":"changes-23","l":"Changes","p":["Khmer translation","Added support for elasticsearch < 6","Documentation fixes"]},{"i":"commits-23","l":"Commits","p":["bba1bca: used ternary conditional","a9cee7d: Support ES5 on elasticsearch rails (#234)","d58a39d: Khmer translation for pagy (#235)","7ced96c: fix for missing suffix fr method reference in doc","73600be: improved consistency in searchkick and elasticsearch_rails documentation examples (#231)"]},{"i":"version-375","l":"Version 3.7.5"},{"i":"changes-24","l":"Changes","p":["Danish translation","Re-enabled legacy jruby travis config","Added ruby 2.7 travis testing and rubocop config"]},{"i":"commits-24","l":"Commits","p":["721d01f: more documentation fixes and improvements","246fca7: Danish translation for Pagy (#232)","e57215f: added ruby 2.7 travis testing and rubocop target version","280164a: re-enabled travis testing for old jruby (travis fixed the jruby images issue)"]},{"i":"version-374","l":"Version 3.7.4"},{"i":"changes-25","l":"Changes","p":["Locales normalization and deprecations","Bundle update"]},{"i":"commits-25","l":"Commits","p":["c424466: Merge branch 'locales-normalization' into dev","032615c: added Pagy::I18n deprecation tests","ebd6151: added deprecation remapping","e1bd70c: renamed pt-br -> pt-BR","a77dfcf: fix for sv and sv-SE pluralization","6a31db6: Swedish locale: add sv-SE, rename se -> sv (#226)","00bd312: bundle update (closes #208, closes #223, closes #224)","133da16: Add tutorial link (#222) [ci skip]"]},{"i":"version-373","l":"Version 3.7.3"},{"i":"commits-26","l":"Commits","p":["a2b915e: reorganization of Javascript documentation","fead55c: Remove duplicated pagination class for Bootstrap (#212)"]},{"i":"version-372","l":"Version 3.7.2"},{"i":"changes-26","l":"Changes","p":["fix for numeric headers in the headers extra"]},{"i":"commits-27","l":"Commits","p":["6a93b97: headers must be strings (closes #211)"]},{"i":"version-371","l":"Version 3.7.1"},{"i":"changes-27","l":"Changes","p":["fix for arel count"]},{"i":"commits-28","l":"Commits","p":["cbe4a97: Type cast pagy_arel_count value to integer (#207)","973f4fe: updated link [ci skip]"]},{"i":"version-370","l":"Version 3.7.0"},{"i":"changes-28","l":"Changes","p":["updated French and Spanish translations","added Italian translation","internal renaming Pagy::Frontend::MARK> Pagy::PAGE_PLACEHOLDER"]},{"i":"commits-29","l":"Commits","p":["434912b: updated rubyzip gem","b627e55: add italian translation (#202)","3341dcc: created ITEMS_PLACEHOLDER constant","7775155: replaced Pagy::Frontend::MARK with Pagy::PAGE_PLACEHOLDER (MARK is still defined for backward compatibility)","439676e: Fixed previous translation for Spanish (#199)","ee1b1f0: Update fr.yml (#195)","8b6f81f: added pagy-cursor link in README","c290dca: update incorrect tutorial link (#198)","77c045d: add: tutorial link in ReadMe - complex search forms (#194)","846eece: fix in README.md","224748a: fix for resurrected-by-mistake line in README"]},{"i":"version-360","l":"Version 3.6.0"},{"i":"changes-29","l":"Changes","p":["added arel extra","updated Gemfile for development environment","docs fixes and improvements"]},{"i":"commits-30","l":"Commits","p":["af0f189: updated minitest and minitest-reporter gems and removed deprecation","6a62de5: updated Gemfile","4856782: Arel Extra (#189)","2a2d9b0: Revert \"Added digital-climate-strike banner\"This reverts commit 07f7d9256ef9b1cef1c1eaf6da56ebb03daa19d5.","b5c2809: docs fixes","f8e4f42: replaced markdown file link for documentation link in extras","6a5c271: updated github-pages gem","60d243c: small doc improvement [ci skip]","2feb451: docs changes","07f7d92: Added digital-climate-strike banner","281da85: update grammar (#187)","739f032: Update how-to: Correct to require header for API (#188)"]},{"i":"version-351","l":"Version 3.5.1"},{"i":"changes-30","l":"Changes","p":["added support for elasticsearch 7"]},{"i":"commits-31","l":"Commits","p":["ca736cc: Adding elasticsearch7 support (#185) Fixes #184","13b7314: correct typos in docs and initializer (#186) [ci skip]","9734ed6: Docs style changes [ci skip]","fb8bcf4: doc fix for missing :partial key in rendering example (closes #180)","7160a18: Minor docs changes [ci skip]"]},{"i":"version-350","l":"Version 3.5.0"},{"i":"changes-31","l":"Changes","p":["Added Korean locale","Added Catalan locale","Added metadata extra","Docs fixes and improvements"]},{"i":"commits-32","l":"Commits","p":["2813973: Docs:","added detailed Quick Start steps (closes #176, closes #177)","added specific sections for API clients and javascript frameworks","43349a8: added metadata extra","261e6e6: Add Catalan localization (#178)","30ed505: temporarily removed jruby 1.7 and 9.0 rvm from travis - waiting travis to fix their rvms or suggest some work around see issue","2863c55: added minitest-reporters gem","0b42e5c: Add translation ko.yml for korean (#172)","da3fc37: minor doc fixes [ci skip]"]},{"i":"version-341","l":"Version 3.4.1"},{"i":"changes-32","l":"Changes","p":["Improvements for searchkick extra","Added javascript Pagy.version"]},{"i":"commits-33","l":"Commits","p":["0ac5c27: refactoring of pagy_search and its usage in order to allow optional term argument for searchkick (#169)","389755b: small docs editing [ci skip]"]},{"i":"version-340","l":"Version 3.4.0"},{"i":"changes-33","l":"Changes","p":["Added UIkit nav, nav_js and combo_js helpers and templates."]},{"i":"commits-34","l":"Commits","p":["1eb25ec: Implement UIkit pagination (#164)"]},{"i":"version-332","l":"Version 3.3.2"},{"i":"changes-34","l":"Changes","p":["Fix for #163","Javascript improvements"]},{"i":"commits-35","l":"Commits","p":["aff8cbb: better handling of resize listeners; added render function to the pagy element","c699fe5: fix for javascript/turbolink nav.render firing when element not found (#163)"]},{"i":"version-331","l":"Version 3.3.1"},{"i":"changes-35","l":"Changes","p":["Namespacing of all exceptions, still backward compatible with legacy rescues"]},{"i":"commits-36","l":"Commits","p":["530cb24: all the exceptions are namespaced and can return more information for easier rescue of special cases"]},{"i":"version-330","l":"Version 3.3.0"},{"i":"changes-36","l":"Changes","p":["Added Bulgarian locale"]},{"i":"commits-37","l":"Commits","p":["2c56428: added pluralization comment to bg.yml dictionary","7111cec: Bulgarian language yml file. (#162)","a46f6b5: improved suggestion for headers usage"]},{"i":"version-321","l":"Version 3.2.1"},{"i":"commits-38","l":"Commits","p":["b403a35: improved trim regex: simpler, safer and more tested","bd3be09: normalized aliasing with alias_method","3c60d9b: minor doc fixes","9aa1bea: fix for missing \"partial\" in examples for template usage (#160)","405b4d2: reorganization and renaming of test helpers","459edaa: improved notes about preventing crawlers to follow look-alike links","01c73d3: added search box to docs"]},{"i":"version-320","l":"Version 3.2.0"},{"i":"commits-39","l":"Commits","p":["2341a83: docs fixes and additions","96ad00f: extended trim extra support to all the *_ js helpers:","refactored trim extra","simplified MARK strings","use of RegExp patterns in pagy.js","added and improved tests"]},{"i":"version-310","l":"Version 3.1.0"},{"i":"commits-40","l":"Commits","p":["1732dee: refactoring of marker and hidden links in *_ js helpers:","MARKER renamed to MARK is simpler, static and hardcoded in pagy.js as well","removed hidden links to bogus urls that were triggering crawlers to follow (#158)","pagy_items_selector now works also with trim and in combination with other * nav_js helpers","updated tests","aa140e1: doc improvement","d0e4ba6: a few fixes and doc improvements","c1ddbd9: Fix typo in docs example (#156)","e0b2a2b: removed duplication in LEGACY_CHANGELOG","ecb6822: fix typo in README"]},{"i":"version-300","l":"Version 3.0.0"},{"i":"breaking-changes-1","l":"Breaking Changes"},{"l":"Refactoring of i18n","p":["The zh-cn and zh-hk were named incorrectly. They have been properly renamed as zh-CN and zh-HK. If you used them, you should update the Pagy::I18n.load statement.","Removed the plural keys inconsistent with the locale: now the dictionary files are 100% compatible with the I18n gem. If you use custom dictionaries, you should update their entries.","The :item_path variable has been renamed as :i18n_key: you should search and replace it."]},{"l":"Renamed nav helper methods and files","p":["The javascript-powered helpers ( pagy*_responsive_nav, pagy*_compact_nav and items_selector) have been renamed in order to be simpler and more descriptive of their arguments, features and requirements. They have been improved internally, but you need only to search and replace because their usage has not been changed."]},{"l":"Bootstrap Extra","p":["v2.0+","v3.0+","pagy_bootstrap_responsive_nav:breakpoints","pagy_bootstrap_nav_js:steps","pagy_bootstrap_compact_nav","pagy_bootstrap_combo_nav_js"]},{"l":"Bulma Extra","p":["v2.0+","v3.0+","pagy_bulma_responsive_nav:breakpoints","pagy_bulma_nav_js:steps","pagy_bulma_compact_nav","pagy_bulma_combo_nav_js"]},{"l":"Foundation Extra","p":["v2.0+","v3.0+","pagy_foundation_responsive_nav:breakpoints","pagy_foundation_nav_js:steps","pagy_foundation_compact_nav","pagy_foundation_combo_nav_js"]},{"l":"Materialize Extra","p":["v2.0+","v3.0+","pagy_materialize_responsive_nav:breakpoints","pagy_materialize_nav_js:steps","pagy_materialize_compact_nav","pagy_materialize_combo_nav_js"]},{"i":"plain--navs-extra","l":"Plain > Navs Extra","p":["v2.0+","v3.0+","pagy_plain_nav( pagy_nav alias)","- removed -","pagy_plain_responsive_nav:breakpoints","pagy_nav_js:steps","pagy_plain_compact_nav","pagy_combo_nav_js","require pagy/extras/plain","require pagy/extras/navs"]},{"l":"Semantic Extra","p":["v2.0+","v3.0+","pagy_semantic_responsive_nav:breakpoints","pagy_semantic_nav_js:steps","pagy_semantic_compact_nav","pagy_semantic_combo_nav_js"]},{"i":"renamed-pagyvars","l":"Renamed Pagy::VARS","p":["Pagy::Vars[:breakpoints] has been renamed as Pagy::VARS[:steps]"]},{"l":"Renamed items_selector","p":["items_selector has been renamed as items_selector_js. It is also possible to use the i18n_key variable to customize the item name."]},{"l":"Renamed classes and params in helpers","p":["Notice: You can skip the following sections if you did not override any nav helper."]},{"l":"CSS nav classes","p":["pagy-bootstrap-combo-nav-js","pagy-bootstrap-compact-nav","pagy-bootstrap-nav-js","pagy-bootstrap-responsive-nav","pagy-bulma-combo-nav-js","pagy-bulma-compact-nav","pagy-bulma-nav-js","pagy-bulma-responsive-nav","pagy-combo-nav-js","pagy-foundation-combo-nav-js","pagy-foundation-compact-nav","pagy-foundation-nav-js","pagy-foundation-responsive-nav","pagy-materialize-combo-nav-js","pagy-materialize-compact-nav","pagy-materialize-nav-js","pagy-materialize-responsive-nav","pagy-nav-js","pagy-plain-compact-nav","pagy-plain-responsive-nav","pagy-semantic-combo-nav-js","pagy-semantic-compact-nav","pagy-semantic-nav-js","pagy-semantic-responsive-nav","The nav CSS classes follow the same renaming rules of the helper methods:","v2.0+","v3.0+"]},{"l":"CSS JSON tag classes","p":["Renamed first param passed to the pagy_json_tag:","v2.0+","v3.0+",":responsive",":nav",":compact",":combo_nav",":items",":items_selector"]},{"l":"Javascript functions","p":["v2.0+","v3.0+","Pagy.responsive","Pagy.nav","Pagy.compact","Pagy.combo_nav","Pagy.items","Pagy.items_selector"]},{"l":"Dropped marginal methods","p":["Dropped pagy_serialized, pagy_apply_init_tag and PagyInit javascript namespace. They were too basic to be useful as support for javascript powered custom component."]},{"i":"commits-41","l":"Commits","p":["15732da: fix for broken migration link (#150)","25470dd: renamed items_selector > items_selector_js","2548557: simplified support extra (dropped pagy_serialized and pagy_apply_init_tag)","260e7d4: refactoring of i18n:","2f67dfa: UPDATE pagy locales id (#151)","54f4a7e: updated docs and comments","704a4df: add french translation (#154)","8ebb1ab: refactoring of test coverage:","901f779: compact > combo and other changes","aa1aad9: renamed multi_series > sequels and relative js arguments and variables; renamed :sizes > :steps; updated nav test cases","ad100eb: renamed plain extra to navs; removed the \"plain_\" qualifier for the helpers","added :collection_key lookup for the items_selector_js helper","added tests for all the pluralization procs","ae3e4bc: removed overridden method and undefined instance variable warnings","completed coverage at 100%","d4be9dd: replaced responsive with nav_js; reordered methods and test normalization","df3ebf2: updated performance assets for v3","ec7d754: removed warning for locales zh-cn and zh-hk, and properly renamed as zh-CN and zh-HK","f7425a5: renamed assets according to helper names; reordered and improved nav docs","f82b2e7: fix typo","I18n gem compliant (removed plural keys inconsistent with the locale)","renamed :items_Path to :collection_key","replaced SingleCov with SimpleCov for CodeCov integration","separate controls of RuboCop, SimpleCov, Oj and CodeCov with dedicated ENV variables","simplified and normalized Pagy dictionary file","simplified Travis setup"]},{"i":"version-215","l":"Version 2.1.5"},{"i":"changes-37","l":"Changes","p":["Fix for pagy_url_for returning duplicated params","Added \"zh-TW\" locale","Deprecated incorrect zh-cn and zh-hk locales in favor of zh-CN and zh-HK locales"]},{"i":"commits-42","l":"Commits","p":["62ee172: fixes for pagy_url_for full url gets duplicated page param (#149)","used concatenated request. base_url instead of request.url","added better tests","fixed overriding of pagy_url_for in items extra","0bca4af: fix for rubocop offense","6b7fe77: deprecated zh-cn and zh-hk locales, normalized as zh-CN and zh-HK","c28d21a: Added locale zh-TW (#147)","95cdf61: docs improvements","310c804: Update lib/locales/README.md (#148)"]},{"i":"version-214","l":"Version 2.1.4"},{"i":"changes-38","l":"Changes","p":["Fix for responsive javascript not working with IE"]},{"i":"commits-43","l":"Commits","p":["3cce19a: javascript responsive refactoring:","replaced problematic loop functions with plain for loops","better naming in responsive function","shortened rendering time","simpler doc","3eacc8d: better doc examples","5c92187: added missing event listeners to auto-incremental javascript example","119ba78: fix for support.md auto-incremental javascript example","1f376d4: Update support.md (#146) Fix incremental/infinite scroll examples"]},{"i":"version-213","l":"Version 2.1.3"},{"i":"changes-39","l":"Changes","p":["added Swedish locale"]},{"i":"commits-44","l":"Commits","p":["f0dcac6: docs update","9dc8c05: removed tap from Pagy#series","e237ea6: add translation for Swedish (#145)","7d71699: lighter README and a few docs improvements","f25b5f5: updated support extra examples with pagy_countess","6fa1d03: comments and docs updates","9f057e6: small improvement for the headers extra doc","2c53e76: a few docs changes for the migration guide","2a90e6a: stop following the GitFlow conventions (extra comlexity for no advantage for this project; too many merge commits; history difficult to follow)","198883c: Fix legacy changelog url (#144)"]},{"i":"version-212","l":"Version 2.1.2"},{"i":"changes-40","l":"Changes","p":["Added \"Current-Page\" header to headers extra"]},{"i":"commits-45","l":"Commits","p":["016b377: added Current-Page default header to headers extra","4086181: fix compilant > compliant typos in docs","5d6edf6: reconciliation between test strings"]},{"i":"version-211","l":"Version 2.1.1"},{"i":"changes-41","l":"Changes","p":["Fix for multiple pagy get wrong url (#143)","Better documentation for responsive breakpoints (#140)"]},{"i":"commits-46","l":"Commits","p":["e9f467a: fix for pagy_url_for not working with multiple pagy in the same request (#143)","75329b4: better configuration example and documentation for responsive breakpoints (#140)"]},{"i":"version-210","l":"Version 2.1.0"},{"i":"changes-42","l":"Changes","p":["Added headers extra","Added support for overflow :last_page to searchkick and elasticsearch_rails extras","Added zh-hk locale","Better docs"]},{"i":"commits-47","l":"Commits","p":["4e83993: updated docs","8bd19d6: added headers extra (#141)","9a26b04: added support for overflow :last_page to searchkick and elasticsearch_rails extras (#138)","c5524fc: Add zh-hk language yml file (#139)","6d5841b: update travis setup","5bd7c0a: updated docs notes for the searchkick and elasticsearch_rails extras","0ca5539: updated comments in config/pagy.rb (#138)"]},{"i":"version-201","l":"Version 2.0.1"},{"i":"changes-43","l":"Changes","p":["Fix for missing require in config/pagy.rb and fix for pt-br translation typos","docs fixes and improvements"]},{"i":"commits-48","l":"Commits","p":["4e7b30f: update Repository Info section in README","835e8d2: Fix for missing require in config/pagy.rb and fix for pt-br translation typos (#134)","8cdffa1: updated consumption chart in README","91aa417: replaced efficiency table with resource-consumption chart; other minor fixes","964ab24: fix for wrong params in searchkick synopsis example","71baf56: added paginate-responder link to the HTTP header in the How to doc (#132)","05e218c: fix for indents in searchkick doc","7061086: added README comments for the docs/update branch","b93259c: fix typos in searchkick readme (#129)","4156121: added how-to for custom count for custom scopes (#130); other minor adjustments","4c7b50a: docs fixes and additions (#128)"]},{"i":"version-200","l":"Version 2.0.0"},{"i":"breaking-changes-2","l":"Breaking Changes"},{"i":"renamed-methods-and-files-already-deprecated","l":"Renamed methods and files (already deprecated)","p":["The following methods have been renamed. You only need to search and replace, because the funtionality has not been changed."]},{"i":"bootstrap-extra-1","l":"Bootstrap Extra","p":["Legacy Name","New Name","pagy_nav_bootstrap","pagy_bootstrap_nav","pagy_nav_compact_bootstrap","pagy_bootstrap_compact_nav","pagy_nav_responsive_bootstrap","pagy_bootstrap_responsive_nav"]},{"i":"bulma-extra-1","l":"Bulma Extra","p":["Legacy Name","New Name","pagy_nav_bulma","pagy_bulma_nav","pagy_nav_compact_bulma","pagy_bulma_compact_nav","pagy_nav_responsive_bulma","pagy_bulma_responsive_nav"]},{"i":"foundation-extra-1","l":"Foundation Extra","p":["Legacy Name","New Name","pagy_nav_foundation","pagy_foundation_nav","pagy_nav_compact_foundation","pagy_foundation_compact_nav","pagy_nav_responsive_foundation","pagy_foundation_responsive_nav"]},{"i":"materialize-extra-1","l":"Materialize Extra","p":["Legacy Name","New Name","pagy_nav_materialize","pagy_materialize_nav","pagy_nav_compact_materialize","pagy_materialize_compact_nav","pagy_nav_responsive_materialize","pagy_materialize_responsive_nav"]},{"l":"Navs Extra","p":["Legacy Name","New Name","pagy_plain_nav( pagy_nav alias)","pagy_nav_compact","pagy_plain_compact_nav","pagy_nav_responsive","pagy_plain_responsive_nav","require pagy/extras/navs","require pagy/extras/plain"]},{"i":"semantic-extra-1","l":"Semantic Extra","p":["Legacy Name","New Name","pagy_nav_semantic","pagy_semantic_nav","pagy_nav_compact_semantic","pagy_semantic_compact_nav","pagy_nav_responsive_semantic","pagy_semantic_responsive_nav"]},{"i":"renamed-classes-and-params-in-helpers-1","l":"Renamed classes and params in helpers","p":["Notice: You can skip this section if you did not override any nav helper."]},{"i":"css-nav-classes-1","l":"CSS nav classes","p":["The nav CSS classes follow the same renaming rules of the helper methods. For example:","pagy-nav-responsive-bootstrap is now pagy-bootstrap-responsive-nav"]},{"i":"css-json-tag-classes-1","l":"CSS JSON tag classes","p":["All the JSON tag classes are now pagy-json, and the qualifier of the json (e.g. compact, responsive, ...) is now passed as the first argument in the array content. For example:","script type=application/json class=pagy-responsive-json[#{id}, ...","is now","script type=application/json class=pagy-json[responsive, #{id}, ...","However the tags have been refactored to use the shared pagy_json_tag helper. For example:","script = pagy_json_tag(:responsive, id, tags, responsive[:widths], responsive[:series])"]},{"l":"Pagy I18n","p":["The Pagy::Frontend::I18N is now Pagy::I18n","The Pagy::I18n.load method accepts params in different format: see the doc"]},{"l":"Searchkick Extra","p":["The searchkick extra has been refactored and its methods work in a different way: see the doc"]},{"l":"Elasticsearch Rails Extra","p":["The elasticsearch_rails extra has been refactored and its methods work in a different way: see the doc"]},{"l":"Pagy Initializer","p":["The pagy initializer has changed: please replace/update it: pagy.rb"]},{"i":"commits-49","l":"Commits","p":["14a7c30: small change in pagy_bootstrap_compact_nav style","1f3c86f: fixed warnings and a few backward incompatible statements","22afe14: refactoring of elasticsearch_rails extra","32984a3: removed empty string assignation (simpler and more efficient)","532743d: simpler overflow module structure (backward compatible)","71a3e5f: Always return the same object as Pagy.root (#125)* Update copyright notice to 2019 (#121)","7948394: updated magic comments","7bb34e3: refactoring of searchkick extra","8550b67: removed fork from tests","8ad362d: conditional SingleCov","9c1212b: i18n refactoring:","a03ff0b: updated README and docs","a6a9371: replaced +'...' syntax with EMPTY + '...' syntax for backward compatibility","add a note in the GoRails section in the README","added multi-language","ca18374: Cache gemset for faster Travis builds (#126)","d8ce15f: updated Gemfile","e61b1e6: Removed deprecations:","faster pagy_t method","fc608e9: setup for ruby 1.9+ and jruby 1.7+","remove deprecated method from extras/shared","remove deprecation of method extras and extra CSS class in navs in modules","remove extra CSS class in tests and templates","remove support for overridden legacy helper in pagy.js","remove the extras/navs.rb and DEPRECATIONS.md files","simpler I18N format"]},{"i":"version-133","l":"Version 1.3.3"},{"i":"commits-50","l":"Commits","p":["11944e4: Fix typo in class name (#122)","40ef36d: travis badge links to branches","78141a3: Improve default German translation (#120)","c0fe0df: minor typo corrections (#119)"]},{"i":"version-132","l":"Version 1.3.2"},{"i":"changes-44","l":"Changes","p":["fixed responsive javascript error"]},{"i":"commits-51","l":"Commits","p":["332c6a2: fix for responsive javascript error in slow loading pages (#115)"]},{"i":"version-131","l":"Version 1.3.1"},{"i":"changes-45","l":"Changes","p":["fixed issue with items extra rendered after pagy_nav"]},{"i":"commits-52","l":"Commits","p":["3ead159: fix for temp items variable in items extra (#117)"]},{"i":"version-130","l":"Version 1.3.0"},{"i":"changes-46","l":"Changes","p":["Added Dutch locale","Refactoring of plurals","Javascript refactoring: fixes and improvements"]},{"i":"commits-53","l":"Commits","p":["6cf86af: added docs notes","70796d3: Add Dutch language (#116)Added Dutch dictionary","a64a8bd: fix for items test","added :pl pluralization (#111)","added explicit 'zero' for :zero_one_few_may_other","added frozen variables","added README.md","added resize delay to Pagy.responsive","b05db4e: added optional target element to Pagy.init for AJAX support","b112f30: plurals.rb:","cef823c: pagy.js responsive refactoring (#115):","default ids are now constant also in different processes and compliant also with oder HTML versions","e35a9ae: refactoring of default element ids for helpers and deprecation:","e9ab4a1: renamed argument items > fetched; removed redundant assignation","moved handling of window event listeners into the responsive function","simpler deprecation code"]},{"i":"version-121","l":"Version 1.2.1"},{"i":"changes-47","l":"Changes","p":["Improved efficiency for count in backend and extras"]},{"i":"commits-54","l":"Commits","p":["01178cb: replaced enumerable #count for #size (suggested in #112)","0723228: count (and page) in * get_variables methods are set only when nil (alternative implementation of #112)"]},{"i":"changes-48","l":"Changes","p":["Deprecation of frontend helpers (see Deprecations)","Internal refactoring of javascript","added support extra for features like: incremental, infinite, auto-scroll pagination"]},{"i":"commits-55","l":"Commits","p":["04ec860: added Pagy.deprecate method","055af34: added :cycle variable to Pagy","263c12d: better internal javascript naming","2bdb1e5: added support extra","35078ab: deprecated and renamed bootstrap navs in code, tests and docs","4bc72af: deprecated and renamed semantic navs in code, tests and docs","5481f40: renamed foundation templates and updated docs","6e3e1e4: deprecated and renamed navs helpers in code, tests and docs; renamed navs extension as plain; added :pagy_plain_nav alias of :pagy_nav","6e8cde8: refactoring of json tags:","910facc: updated tests","95045c3: renamed bulma templates and updated docs","98ce8e7: automatic ids based on hash must be strings","a9c3822: deprecated and renamed materialize navs in code, tests and docs","c1680ec: add JSON/javascript deprecations","cd8256e: added DEPRECATIONS file","dbad41a: deprecated and renamed bulma navs in code, tests and docs","e4f859f: renamed bootstrap templates and updated docs","extracted pagy_json_tag from frontend extras","f984f83: deprecated and renamed foundation navs in code, tests and docs","removed prefix used for all pagy element ids","single \"pagy-json\" class for all json tags"]},{"i":"version-110","l":"Version 1.1.0"},{"i":"changes-49","l":"Changes","p":["added Pagy::Countless support subclass","added countless extra integrated with the other extras"]},{"i":"commits-56","l":"Commits","p":["fa547ad: reworded the doc notice about :pagy_countless_get_items returning an Array; fix typo in comment","8368a99: Synopsys > Synopsis","1b8a080: a few fixes for the countless tests","0bf2f46: Typo fix","2f93227: Test coverage for Pagy::Countless(#108)","c2a25b6: Add some tests for Countless extra (#108)","04fa7a2: added countless support to the items extra","f272faf: added countless support to the overflow extra","7b25165: added countless sub-class and extra code","37cf51a: series can return an empty array if size is empty","7bf9d14: fix for a few missing lines in the extras docs"]},{"i":"version-100","l":"Version 1.0.0"},{"i":"breaking-changes-3","l":"Breaking Changes","p":["The \"Out Of Range\" concept has been redefined as \"Overflow\" resulting in a few renaming. Since there are no changes in the logic, you can update by just searching and replacing (if present) a few string in your code:","/out_of_range> /overflow","OutOfRangeError> OverflowError",":out_of_range_mode> :overflow","out_of_range?> overflow?"]},{"i":"commits-57","l":"Commits","p":["431e4db: redefined the \"Out Of Range\" concept as \"Overflow\" (#103):","files: out_of_range*> overflow*","extra name: out_of_range > overflow","error class: OutOfRangeError > OverflowError","module: OutOfRange > Overflow","VARS: :out_of_range_mode > :overflow","instance variable: @out_of_range > @overflow","method: out_of_range? > overflow?","a0b411a: added README note about semantic versioning"]},{"i":"version-0231","l":"Version 0.23.1"},{"i":"commits-58","l":"Commits","p":["e8a2251: fix for ArgumentError feedback in Pagy constructor should show the originally passed offending value (#104)"]},{"i":"version-0230","l":"Version 0.23.0"},{"i":"changes-50","l":"Changes","p":["Added German locale"]},{"i":"commits-59","l":"Commits","p":["f41d465: German (#101)","b6149ec: docs fixes","408cc32: fix for typo in CHANGELOG"]},{"i":"version-0220","l":"Version 0.22.0"},{"i":"changes-51","l":"Changes","p":["Added Norwegian locale"]},{"i":"commits-60","l":"Commits","p":["59064c2: Added Norwegian locale (#100)"]},{"i":"version-0210","l":"Version 0.21.0"},{"i":"changes-52","l":"Changes","p":["Added Elasticsearch Rails extra"]},{"i":"commits-61","l":"Commits","p":["e0acbf6: fix for robocop offenses (#96)","d082729: Added Elasticsearch Rails extra (#96)","dd0575a: fix doc typo","d3510a7: updated comments in plurals.rb","5ed458a: added README disclaimer","02b0a74: Update link to Semantic-UI pagination"]},{"i":"version-0200","l":"Version 0.20.0"},{"i":"breaking-changes-4","l":"Breaking Changes","p":["I18n refactoring","Combo helpers and item selectors have been refactored: you should update your overridden helpers accordingly","The i18n structure has changed, update your custom i18n locale file"]},{"i":"commits-62","l":"Commits","p":["bab3bf8: Merge pull request #93 from ddnexus/i18n","f8017c3: updated config/pagy.rb","c461885: added ru plural proc","5680628: fix for wrong indentation in zh-cn","6998932: pagy.yml properly split into separate locale files","e3048f2: improvements for ja tr and zh-cn","c1aec4c: removed marginal pagy.nav.current key used only by foundation an fixed consistency in foundation helpers and templates","15e413b: refactoring of the composition of i18n strings for compact helpers and items selector"]},{"i":"version-0194","l":"Version 0.19.4"},{"i":"changes-53","l":"Changes","p":["added Japanese, Brazilian and Indonesian translations"]},{"i":"commits-63","l":"Commits","p":["67f1bb9: reordered translations","4ab3438: adding pt-br translation (#87)","d1f8674: alpha-ordered translations","0311c85: Added Indonesian locale (#91)","ce68624: add japanese translation (#89)","5e4f93d: corrected chinese translation (#88)","26654d4: updated README"]},{"i":"version-0193","l":"Version 0.19.3"},{"i":"changes-54","l":"Changes","p":["added Chinese locale"]},{"i":"commits-64","l":"Commits","p":["ebc0ed5: added Chinese locale","31823f9: fix for compact nav in bootstrap 3 (#86)","ac2a76c: docs fixes"]},{"i":"version-0192","l":"Version 0.19.2"},{"i":"changes-55","l":"Changes","p":["added Russian locale"]},{"i":"commits-65","l":"Commits","p":["099731b: small improvement in i18n docs","ef77ae2: Added ru translation (#84)","d4b49d6: Fixed a typo in spanish locale. (#85)","a91b72a: small description change for items selector UI","a62b222: small refactoring of the trim extra","c23505a: fix for doc typo"]},{"i":"version-0191","l":"Version 0.19.1"},{"i":"changes-56","l":"Changes","p":["added Spanish locale"]},{"i":"commits-66","l":"Commits","p":["6d498a1: Added Spanish locale (#82)","65db877: general docs improvements","5862b3f: updated README","6414395: added GoRails screencast link to README","a8ad399: docs fixes and improvements","435e849: updated docs"]},{"i":"version-0190","l":"Version 0.19.0"},{"l":"Important Changes","p":["added Semantic extra"]},{"i":"commits-67","l":"Commits","p":["b65a905: fix for page_link string and conflicts, added compact and responsive navs tests and docs (#73)","f147cca: Semantic UI nav helper (#73)","429ac14: updated pagy.js requirements info"]},{"i":"version-0180","l":"Version 0.18.0"},{"i":"breaking-changes-5","l":"Breaking Changes","p":["The extras dir has been reorganized:","the helpers in the compact and responsive extras have been integrated into the respective frontend extras ( bootstrap, bulma, foundation, materialize and navs), so the compact and responsive extras are gone. You should remove them from the pagy.rb initializer, eventually adding the navs extra if you use its plain helpers.","The templates and javascripts dirs have been moved to lib. If you use rails and the pagy.js you should update the assets.paths in the pagy.rb initializer."]},{"i":"commits-68","l":"Commits","p":["8865fdb: updated docs","f093c7e: reorganization of tests","cd11c4f: reorganization of extras dir"]},{"i":"version-0170","l":"Version 0.17.0"},{"i":"important-changes-1","l":"Important Changes","p":["added Foundation extra"]},{"i":"commits-69","l":"Commits","p":["ba7d046: added fixes and improvements for foundation extra:","d78f85d: Foundation extra (#79)","13f37a0: restyling of extras in README, docs and initializer example"]},{"i":"version-0160","l":"Version 0.16.0"},{"i":"important-changes-2","l":"Important Changes","p":["added Searchkick extra"]},{"i":"commits-70","l":"Commits","p":["6143f5f: docs fixes","5227bd1: added searchkick references in docs, README and inititalizer example (#75)","b9acf0c: Searchkick extra (#75)"]},{"i":"version-0151","l":"Version 0.15.1"},{"i":"important-changes-3","l":"Important Changes","p":["small bugs and compatibility fixes"]},{"i":"commits-71","l":"Commits","p":["1436833: added Post and Tutorials links and Credits section","4e400c6: items are adjusted only for non-empty pages(avoid sequel error for limit 0)","3abcc11: fix for sinatra: page_param must be converted to string","ad8c311: fix for trim extra missing when current page=1","6f774d7: added missing doc menu for trim extra","5f6de56: added a few tests for the trim extra"]},{"i":"version-0150","l":"Version 0.15.0"},{"i":"important-changes-4","l":"Important Changes","p":["Added Trim extra"]},{"i":"commits-72","l":"Commits","p":["868be25: added trim extra","fb48976: chained method for extra items overrides"]},{"i":"version-0140","l":"Version 0.14.0"},{"i":"important-changes-5","l":"Important Changes","p":["Added Materialize extra"]},{"i":"commits-73","l":"Commits","p":["b0e959b: added stars github button to docs","1dd38c9: added materialize extra (#44)","30c1a57: updated docs"]},{"i":"version-0131","l":"Version 0.13.1"},{"i":"important-changes-6","l":"Important Changes","p":["Improvements and fixes for the out_of_range extra"]},{"i":"commits-74","l":"Commits","p":["419af23: better comments and error message for unknown out_of_range_mode variable","48fa056: use case (#71)","36761a8: fix :last_page mode in out_of_range extra (#70)","5958dc5: out_of_range extra improvements (#68)","7177cd9: added note about the out_of_range exta to the README"]},{"i":"version-0130","l":"Version 0.13.0"},{"i":"important-changes-7","l":"Important Changes","p":["Added Out Of Range extra"]},{"i":"commits-75","l":"Commits","p":["c52db2a: added out_of_range extra (#68)","37119ee: fixes for bulma extra in initializer_example.rb and docs","05729f6: removed redundant condition in Pagy initialize","2e75247: small fixes in CHANGELOG","3d732dd: docs for empty page OutOfRangeError (#69)","a3be52e: Fixed screenshot name for compact bulma extra (#67)"]},{"i":"version-0120","l":"Version 0.12.0"},{"i":"important-changes-8","l":"Important Changes","p":["Added Bulma extra","Added Turkish language in pagy dictionary","Improved consistence and compatibility in extras"]},{"i":"commits-76","l":"Commits","p":["8fc91df: fix for \"area\" typos in bulma extra (#62) and consistency improvement across responsive helpers","bb0060f: fix for window event listeners persisted by turbolinks (#64)","d759f91: Bulma extra (#62)","9f09837: Fixed typo in some extras usage (#63)","2ce572a: Added Turkish locales (#58)","dd361e1: replaced Array.from in pagy.js for extended compatibility","bb1243d: fix typos","da34b94: fix typo (#61)","cdab354: added better I18n comments in initializer_example.rb"]},{"i":"version-0112","l":"Version 0.11.2"},{"i":"commits-77","l":"Commits","p":["76fc273: used merge! in place of **"]},{"i":"version-0111","l":"Version 0.11.1"},{"i":"important-changes-9","l":"Important Changes","p":["All tests has been converted to the spec syntax"]},{"i":"commits-78","l":"Commits","p":["b14f446: converted tests to spec syntax","0422568: cleanup of i81n plurals in code and docs","5a2db16: added a few missing references to docs","6028980: enabled rubocop Naming/UncommunicativeMethodParamName","1de470b: small improvements and fixes for docs","228109e: fix for typos","0a1ed94: updated initializer_example.rb"]},{"i":"version-0110","l":"Version 0.11.0"},{"i":"breaking-changes-6","l":"Breaking Changes","p":["The pagy_nav_bootstrap_compact and pagy_nav_boostrap_responsive helpers have been renamed as pagy_nav_compact_bootstrap and pagy_nav_responsive_bootstrap to keep the consistency with the extras structure (and support the consistency of future framework additions). Please, rename them accordingly.","The Pagy::Frontend::I18N.load_file has been renamed as Pagy::Frontend::I18N.load and expects a hash as the argument. See the I18n doc.","The seldom used Pagy::Frontend::I18N[plurals] has been renamed as Pagy::Frontend::I18N[plural]. See the I18n doc.","Please, update your initializer file to the new initializer_example.rb"]},{"i":"commits-79","l":"Commits","p":["826798b: refactoring of I18N constant: added support for multiple static languages and plural rules","b78b71e: better naming of json classes","ea7c22b: breaking change for compact and responsive extras: renaming of pagy_nav_bootstrap_* helpers to pagy_nav_*_ bootstrap, consistent with extras structure","7d1a573: internal consistency renaming of local/test variables; minor fixes and improvements"]},{"i":"version-0101","l":"Version 0.10.1"},{"i":"commits-80","l":"Commits","p":["8ca5013: doc improvements","99081ee: small performance improvement for #51 and updated doc","5863ceb: add support for counting grouped collections (#51)"]},{"i":"version-0100","l":"Version 0.10.0"},{"i":"breaking-changes-7","l":"Breaking Changes","p":["The javascript used by the compact, items and responsive extras has been refactored in order to avoid any usafe-inline vulnerability. The javascript files have been replaced by one shared file, and require to set an event listener or run a function on window load. See the commit below and the javascript doc for details."]},{"i":"commits-81","l":"Commits","p":["50e304b: javascript refactoring in order to avoid any usafe-inline vulnerability (#52):","removed inline scripts from all extras","one single pagy.js file shared among all the extras","the Pagy.init function should be executed at document load","updated tests and docs","32d0afc: doc fix: UI selector > selector UI"]},{"i":"version-092","l":"Version 0.9.2"},{"i":"important-changes-10","l":"Important Changes","p":["100% test coverage for core code and extras"]},{"i":"commits-82","l":"Commits","p":["c11dfcc: updated README","f8728e7: added responsive extra tests","14ea356: added compact extra tests","2ac743c: added bootstrap extra test","159b65e: added i18n extra tests","4449c95: normalization of indentation and empty lines","9afa9d9: Default Frozen Strings for Ruby Files (#49)","036c87f: Fix typo in :page_param configuration (#48)"]},{"i":"version-091","l":"Version 0.9.1"},{"i":"important-changes-11","l":"Important Changes","p":["Improved the Pagy::OutOfRangeError exception, now storing the failed Pagy object"]},{"i":"commits-83","l":"Commits","p":["9817659: improved OutOfRangeError exception (storing the failed Pagy object)","7195229: a few minor consistency fixes for the initializer_example.rb","00cd5bb: Fix typo (#45)","8b3a733: fix for header level in README"]},{"i":"version-090","l":"Version 0.9.0"},{"i":"important-changes-12","l":"Important Changes","p":["Improvements for compact extra","Refactoring of test structure and tasks","Added items extra: Allow the client to request a custom number of items per page with an optional selector UI"]},{"i":"commits-84","l":"Commits","p":["45dd700: added array extra tests","623ce9e: Added items extra and tests","5902e8a: passed instance variables are not deleted from the vars hash","e2efb89: refactoring of test structure","1cc335b: documentation updates","42ba053: improved pagy-compact.js","8c20fa2: Enable support for return key inside Pagy compact input (#43)","d4b751c: Documentation updates","9f0dec9: fix for broken links in docs","c41e823: additions and normalization of documentation and comments","38f9a49: fix for broken links in readme"]},{"i":"version-086","l":"Version 0.8.6"},{"i":"commits-85","l":"Commits","p":["0db9125: minor documentation improvements","8a0a5a8: broader parallel assignment in methods (improved performance)","18baa8b: small optimization (used a few less objects)","1d16e3d: documentation additions","62c420d: updated doc and charts"]},{"i":"version-085","l":"Version 0.8.5"},{"i":"important-changes-13","l":"Important Changes","p":["Fix for I18n exception on startup"]},{"i":"commits-86","l":"Commits","p":["31b815d: fix for I18n exception on startup (#41)"]},{"i":"version-084","l":"Version 0.8.4"},{"i":"important-changes-14","l":"Important Changes","p":["Improved readability and memory allocation","All the core methods are tested","Better documentation"]},{"i":"commits-87","l":"Commits","p":["c25493a: added backend tests","48dbe17: docs small fixes and improvements","5e9b7d4: add Pagy::VARS[:item_path] empty default","ce8d09a: add Pagy::VARS[:anchor] empty default","8789edd: improve readability of pagy_link_proc (#40):","remove conditions to avoid extra spaces inside the html tags","add Pagy::VARS[:link_extra] empty default","2f0d384: docs additions"]},{"i":"version-083","l":"Version 0.8.3"},{"i":"important-changes-15","l":"Important Changes","p":["Refactoring of I18N to fix #39"]},{"i":"breaking-changes-8","l":"Breaking Changes","p":["Pagy::I18N has been moved to Pagy::Frontend::I18N: you should update the initializer in case you set any of the Pagy::I18N variable. Read I18n for details."]},{"i":"commits-88","l":"Commits","p":["d85791e: Refactoring I18N to fix #39:","moved I18N from Pagy to Pagy::Frontend - I18N_DATA moved to Pagy::Frontend::I18N[:data]","I18N[:file] removed","added I18N.load_file method","updated initializer and doc","504b943: added missing tests to frontend_test.rb","6168df3: use actionable code coverage (#29)"]},{"i":"version-082","l":"Version 0.8.2"},{"i":"important-changes-16","l":"Important Changes","p":["Fix for PostgreSQL: collection.count(:all)"]},{"i":"commits-89","l":"Commits","p":["8a204dc: fix for count in Pagy::Backend (#36)","29ed221: added test_check_variable_defaults","1263540: indentation fixes for tests","a927d57: improve testability by sorting tests into files that mirror lib + group by method (#37)","5a5178b: docs markdown normalization and README editing","11fbc49: examples was using responsive instead of i18n (#35)","b9517d3: docs small fixes and improvements","8bc6900: fix for typos and omissions in initializer_example.rb","a09558e: avoid uncoverable code by not using gemspec in Gemfile (#33)","a585fe6: clean up gemspec (#32)","ae48f13: test on all supported ruby versions and split out rubocop (#30)"]},{"i":"version-081","l":"Version 0.8.1"},{"i":"important-changes-17","l":"Important Changes","p":["Added :params and :anchor variables to control the generation of arbitrary URLs per pagy instance"]},{"i":"commits-90","l":"Commits","p":["d185461: added :params and :anchor variables to control the generation of arbitrary URLs per pagy instance","62fd6c8: better forward improvements with pagy_url_for receiving the pagy instance instead of the single pagy_param","748de0d: readme and changelog improvement"]},{"i":"version-080","l":"Version 0.8.0"},{"i":"important-changes-18","l":"Important Changes","p":["Added an initializer_example.rb that you can use as an easy template for Pagy configuration","Integrated extras from pagy-extras gem into Pagy, now optionally required in the initializer","Refactored I18n: simpler code and simpler configuration now based on the I18n extra","Reorganized documentation and added a few more how-to topics","Added the :page_param variable used to get the page number from and create the URL for the page links"]},{"i":"breaking-changes-9","l":"Breaking Changes","p":["Extras are now integrated in Pagy. The pagy-extras gem has been discontinued: you should remove it and update your code as indicated here","Pagy I18n has been refactored and it's simpler to use. The main change is that the Pagy::I18N[:gem] variable has been removed, so if you want to use the I18n gem in place of the internal Pagy implementation you need just to require 'pagy/extra/i18n' in your initializer. (see the I18n doc)","pagy_url_for now requires the pagy argument and it's called with 2 params: if you have overridden it, you should add the extra param.","pagy_get_vars now requires the vars argument and it's called with 2 params: if you have overridden it, you should add the extra param.","pagy_array_get_vars now requires the vars argument and it's called with 2 params: if you have overridden it, you should add the extra param."]},{"i":"commits-91","l":"Commits","p":["3862d26: Travis (#22)","3e2ad90: added CHANGELOG.md with the latest few versions (#23)","605169a: added initializer_example.rb","7050ee0: basic rubocop setup (#18)","7aee689: small docs improvements","9040593: added doc about skipping single pages navs","9b0d420: style cleanup (#24)","befe92d: Fixes Travis Badge (#25)","daa2c1b: I18n refactoring:","dbc5a05: Add prev/next links to compact Bootstrap nav and improve HTML semantics (#21)","f42811d: implemented :page_param (#20)","f764cc1: refactoring extras:","modules are now required and not autoloaded","moved pagy-extra files into the extras dir - moved the templates dir into the extras dir","simplified the configuration of I18n now using the I18n extra to override the pagy_t","simplified the pagy_t definition","updated doc","updated the documentation"]},{"i":"version-072","l":"Version 0.7.2"},{"i":"commits-92","l":"Commits","p":["527cd8e: simplification of pagy_url_for","144c997: URIs are always joined with forward slash (#11)"]},{"i":"version-071","l":"Version 0.7.1"},{"i":"commits-93","l":"Commits","p":["92260b5: docs and comments refactoring, also updated for pagy-extras v0.2.0","46f235e: Remove a couple of Range allocations (#10)","39c5470: Only use and/or keywords for control flow (#12)","26bb29c: fix for last page items adjusted to 0 (#3)","860c579: small improvement: to_i called only once in core variables set","b18f254: Merge pull request #5 from artinboghosian/patch-1","03d6ee8: Update README.md","358a806: a couple of links added to the doc","fac1f34: docs small fixes and improvements"]},{"i":"version-070","l":"Version 0.7.0"},{"i":"commits-94","l":"Commits","p":["e480d04: better handling of blank core variables","b56ef9e: docs fixes and improvements","987be15: I18N[:plurals] proc uses symbols and returns a frozen string","6ea7a48: changes for PR #2: - use of local variable zero_one instead of constant I18N_PLURALS - VARS cannot be frozen","fb8975b: Freeze class immutable constant variable at first"]},{"i":"version-060","l":"Version 0.6.0"},{"i":"commits-95","l":"Commits","p":["ec8e268: created pagy-extras gem:","moved pagy_nav_bootstrap method and templates","updated docs files (fixes and use of relative links)","facc4c3: unescaped notation for all erb usage","26c068f: moved require yaml in Frontend","f5782d8: added css classes to pagy helper navs","cee02c6: helper tags are strings","4788c3c: grouped the variables :initial, :before, :after and :final into one single :size array; #series can work with different sizes","e610b82: minor docs fixes"]}]]